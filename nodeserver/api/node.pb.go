// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: node.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Retcode int32

const (
	Retcode_RET_SUCC      Retcode = 0 // 成功
	Retcode_RET_Reconnect Retcode = 1 // 重连
)

// Enum value maps for Retcode.
var (
	Retcode_name = map[int32]string{
		0: "RET_SUCC",
		1: "RET_Reconnect",
	}
	Retcode_value = map[string]int32{
		"RET_SUCC":      0,
		"RET_Reconnect": 1,
	}
)

func (x Retcode) Enum() *Retcode {
	p := new(Retcode)
	*p = x
	return p
}

func (x Retcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Retcode) Descriptor() protoreflect.EnumDescriptor {
	return file_node_proto_enumTypes[0].Descriptor()
}

func (Retcode) Type() protoreflect.EnumType {
	return &file_node_proto_enumTypes[0]
}

func (x Retcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Retcode.Descriptor instead.
func (Retcode) EnumDescriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{0}
}

type ServerType int32

const (
	ServerType_SERVICE_NONE     ServerType = 0
	ServerType_SERVICE_NODE     ServerType = 1
	ServerType_SERVICE_GAME     ServerType = 2
	ServerType_SERVICE_GATE     ServerType = 3
	ServerType_SERVICE_DISPATCH ServerType = 4
	ServerType_SERVICE_MULTI    ServerType = 5
	ServerType_SERVICE_MUIP     ServerType = 6
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "SERVICE_NONE",
		1: "SERVICE_NODE",
		2: "SERVICE_GAME",
		3: "SERVICE_GATE",
		4: "SERVICE_DISPATCH",
		5: "SERVICE_MULTI",
		6: "SERVICE_MUIP",
	}
	ServerType_value = map[string]int32{
		"SERVICE_NONE":     0,
		"SERVICE_NODE":     1,
		"SERVICE_GAME":     2,
		"SERVICE_GATE":     3,
		"SERVICE_DISPATCH": 4,
		"SERVICE_MULTI":    5,
		"SERVICE_MUIP":     6,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_node_proto_enumTypes[1].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_node_proto_enumTypes[1]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{1}
}

type ServerStatus int32

const (
	ServerStatus_ServerStatus_None     ServerStatus = 0
	ServerStatus_ServerStatus_Normal   ServerStatus = 1 // 正常
	ServerStatus_ServerStatus_Crowded  ServerStatus = 2 // 拥挤 // 不建议参与分发
	ServerStatus_ServerStatus_Full     ServerStatus = 3 // 爆满 // 禁止参与分发
	ServerStatus_ServerStatus_Rotation ServerStatus = 4 // 被轮替 // 禁止参与分发
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "ServerStatus_None",
		1: "ServerStatus_Normal",
		2: "ServerStatus_Crowded",
		3: "ServerStatus_Full",
		4: "ServerStatus_Rotation",
	}
	ServerStatus_value = map[string]int32{
		"ServerStatus_None":     0,
		"ServerStatus_Normal":   1,
		"ServerStatus_Crowded":  2,
		"ServerStatus_Full":     3,
		"ServerStatus_Rotation": 4,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_node_proto_enumTypes[2].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_node_proto_enumTypes[2]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerStatus.Descriptor instead.
func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{2}
}

type TestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *TestReq) Reset() {
	*x = TestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReq) ProtoMessage() {}

func (x *TestReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReq.ProtoReflect.Descriptor instead.
func (*TestReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{0}
}

func (x *TestReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqMsg string `protobuf:"bytes,2,opt,name=req_msg,json=reqMsg,proto3" json:"req_msg,omitempty"`
}

func (x *TestRsp) Reset() {
	*x = TestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRsp) ProtoMessage() {}

func (x *TestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRsp.ProtoReflect.Descriptor instead.
func (*TestRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{1}
}

func (x *TestRsp) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

type RegisterServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ServerType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.ServerType" json:"type,omitempty"`        // 服务类型
	AppVersion string     `protobuf:"bytes,2,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // 服务版本
	RegionName string     `protobuf:"bytes,3,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"` // 区服
	AppId      uint32     `protobuf:"varint,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`               // app id
	MqAddr     string     `protobuf:"bytes,5,opt,name=mq_addr,json=mqAddr,proto3" json:"mq_addr,omitempty"`
	OuterPort  string     `protobuf:"bytes,6,opt,name=outer_port,json=outerPort,proto3" json:"outer_port,omitempty"`
	OuterAddr  string     `protobuf:"bytes,7,opt,name=outer_addr,json=outerAddr,proto3" json:"outer_addr,omitempty"`
}

func (x *RegisterServerReq) Reset() {
	*x = RegisterServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerReq) ProtoMessage() {}

func (x *RegisterServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerReq.ProtoReflect.Descriptor instead.
func (*RegisterServerReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterServerReq) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVICE_NONE
}

func (x *RegisterServerReq) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *RegisterServerReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *RegisterServerReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *RegisterServerReq) GetMqAddr() string {
	if x != nil {
		return x.MqAddr
	}
	return ""
}

func (x *RegisterServerReq) GetOuterPort() string {
	if x != nil {
		return x.OuterPort
	}
	return ""
}

func (x *RegisterServerReq) GetOuterAddr() string {
	if x != nil {
		return x.OuterAddr
	}
	return ""
}

type RegisterServerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode Retcode `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3,enum=proto.Retcode" json:"ret_code,omitempty"` // 状态
}

func (x *RegisterServerRsp) Reset() {
	*x = RegisterServerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerRsp) ProtoMessage() {}

func (x *RegisterServerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerRsp.ProtoReflect.Descriptor instead.
func (*RegisterServerRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterServerRsp) GetRetCode() Retcode {
	if x != nil {
		return x.RetCode
	}
	return Retcode_RET_SUCC
}

type CloseServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ServerType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.ServerType" json:"type,omitempty"`        // 服务类型
	AppId      uint32     `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`               // app id
	RegionName string     `protobuf:"bytes,3,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"` // 区服
}

func (x *CloseServerReq) Reset() {
	*x = CloseServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseServerReq) ProtoMessage() {}

func (x *CloseServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseServerReq.ProtoReflect.Descriptor instead.
func (*CloseServerReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{4}
}

func (x *CloseServerReq) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVICE_NONE
}

func (x *CloseServerReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CloseServerReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

type CloseServerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseServerRsp) Reset() {
	*x = CloseServerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseServerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseServerRsp) ProtoMessage() {}

func (x *CloseServerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseServerRsp.ProtoReflect.Descriptor instead.
func (*CloseServerRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{5}
}

type KeepaliveServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ServerType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.ServerType" json:"type,omitempty"`        // 服务类型
	AppVersion string     `protobuf:"bytes,2,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // 服务版本
	RegionName string     `protobuf:"bytes,3,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"` // 区服
	AppId      uint32     `protobuf:"varint,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`               // app id
	MqAddr     string     `protobuf:"bytes,5,opt,name=mq_addr,json=mqAddr,proto3" json:"mq_addr,omitempty"`
	OuterPort  string     `protobuf:"bytes,6,opt,name=outer_port,json=outerPort,proto3" json:"outer_port,omitempty"`
	OuterAddr  string     `protobuf:"bytes,7,opt,name=outer_addr,json=outerAddr,proto3" json:"outer_addr,omitempty"`
	LoadCount  int64      `protobuf:"varint,8,opt,name=load_count,json=loadCount,proto3" json:"load_count,omitempty"`
}

func (x *KeepaliveServerReq) Reset() {
	*x = KeepaliveServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepaliveServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepaliveServerReq) ProtoMessage() {}

func (x *KeepaliveServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepaliveServerReq.ProtoReflect.Descriptor instead.
func (*KeepaliveServerReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{6}
}

func (x *KeepaliveServerReq) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVICE_NONE
}

func (x *KeepaliveServerReq) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *KeepaliveServerReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *KeepaliveServerReq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *KeepaliveServerReq) GetMqAddr() string {
	if x != nil {
		return x.MqAddr
	}
	return ""
}

func (x *KeepaliveServerReq) GetOuterPort() string {
	if x != nil {
		return x.OuterPort
	}
	return ""
}

func (x *KeepaliveServerReq) GetOuterAddr() string {
	if x != nil {
		return x.OuterAddr
	}
	return ""
}

func (x *KeepaliveServerReq) GetLoadCount() int64 {
	if x != nil {
		return x.LoadCount
	}
	return 0
}

type KeepaliveServerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode Retcode `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3,enum=proto.Retcode" json:"ret_code,omitempty"` // 状态
}

func (x *KeepaliveServerRsp) Reset() {
	*x = KeepaliveServerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepaliveServerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepaliveServerRsp) ProtoMessage() {}

func (x *KeepaliveServerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepaliveServerRsp.ProtoReflect.Descriptor instead.
func (*KeepaliveServerRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{7}
}

func (x *KeepaliveServerRsp) GetRetCode() Retcode {
	if x != nil {
		return x.RetCode
	}
	return Retcode_RET_SUCC
}

type GetAllGateServerMqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionName string `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
}

func (x *GetAllGateServerMqReq) Reset() {
	*x = GetAllGateServerMqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGateServerMqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGateServerMqReq) ProtoMessage() {}

func (x *GetAllGateServerMqReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGateServerMqReq.ProtoReflect.Descriptor instead.
func (*GetAllGateServerMqReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllGateServerMqReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

type GetAllGateServerMqRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerList []*GateServerMq `protobuf:"bytes,1,rep,name=server_list,json=serverList,proto3" json:"server_list,omitempty"`
}

func (x *GetAllGateServerMqRsp) Reset() {
	*x = GetAllGateServerMqRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGateServerMqRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGateServerMqRsp) ProtoMessage() {}

func (x *GetAllGateServerMqRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGateServerMqRsp.ProtoReflect.Descriptor instead.
func (*GetAllGateServerMqRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllGateServerMqRsp) GetServerList() []*GateServerMq {
	if x != nil {
		return x.ServerList
	}
	return nil
}

type GateServerMq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	MqAddr string `protobuf:"bytes,2,opt,name=mq_addr,json=mqAddr,proto3" json:"mq_addr,omitempty"`
}

func (x *GateServerMq) Reset() {
	*x = GateServerMq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateServerMq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateServerMq) ProtoMessage() {}

func (x *GateServerMq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateServerMq.ProtoReflect.Descriptor instead.
func (*GateServerMq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{10}
}

func (x *GateServerMq) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GateServerMq) GetMqAddr() string {
	if x != nil {
		return x.MqAddr
	}
	return ""
}

type GetAllRegionInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRegionInfoReq) Reset() {
	*x = GetAllRegionInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRegionInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRegionInfoReq) ProtoMessage() {}

func (x *GetAllRegionInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRegionInfoReq.ProtoReflect.Descriptor instead.
func (*GetAllRegionInfoReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{11}
}

type GetAllRegionInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfoList map[string]*RegionInfo `protobuf:"bytes,1,rep,name=region_info_list,json=regionInfoList,proto3" json:"region_info_list,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAllRegionInfoRsp) Reset() {
	*x = GetAllRegionInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRegionInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRegionInfoRsp) ProtoMessage() {}

func (x *GetAllRegionInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRegionInfoRsp.ProtoReflect.Descriptor instead.
func (*GetAllRegionInfoRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllRegionInfoRsp) GetRegionInfoList() map[string]*RegionInfo {
	if x != nil {
		return x.RegionInfoList
	}
	return nil
}

type RegionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title           string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type            uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ClientSecretKey []byte `protobuf:"bytes,4,opt,name=client_secret_key,json=clientSecretKey,proto3" json:"client_secret_key,omitempty"`
	AutoCreate      bool   `protobuf:"varint,5,opt,name=auto_create,json=autoCreate,proto3" json:"auto_create,omitempty"`
	MinGateAddr     string `protobuf:"bytes,6,opt,name=min_gate_addr,json=minGateAddr,proto3" json:"min_gate_addr,omitempty"`
	MinGatePort     string `protobuf:"bytes,7,opt,name=min_gate_port,json=minGatePort,proto3" json:"min_gate_port,omitempty"`
	MinGateAppId    uint32 `protobuf:"varint,8,opt,name=min_gate_app_id,json=minGateAppId,proto3" json:"min_gate_app_id,omitempty"`
}

func (x *RegionInfo) Reset() {
	*x = RegionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionInfo) ProtoMessage() {}

func (x *RegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionInfo.ProtoReflect.Descriptor instead.
func (*RegionInfo) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{13}
}

func (x *RegionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RegionInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RegionInfo) GetClientSecretKey() []byte {
	if x != nil {
		return x.ClientSecretKey
	}
	return nil
}

func (x *RegionInfo) GetAutoCreate() bool {
	if x != nil {
		return x.AutoCreate
	}
	return false
}

func (x *RegionInfo) GetMinGateAddr() string {
	if x != nil {
		return x.MinGateAddr
	}
	return ""
}

func (x *RegionInfo) GetMinGatePort() string {
	if x != nil {
		return x.MinGatePort
	}
	return ""
}

func (x *RegionInfo) GetMinGateAppId() uint32 {
	if x != nil {
		return x.MinGateAppId
	}
	return 0
}

type GetRegionMinGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionName string `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
}

func (x *GetRegionMinGameReq) Reset() {
	*x = GetRegionMinGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionMinGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionMinGameReq) ProtoMessage() {}

func (x *GetRegionMinGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionMinGameReq.ProtoReflect.Descriptor instead.
func (*GetRegionMinGameReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{14}
}

func (x *GetRegionMinGameReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

type GetRegionMinGameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinGsAppId uint32 `protobuf:"varint,1,opt,name=min_gs_app_id,json=minGsAppId,proto3" json:"min_gs_app_id,omitempty"`
}

func (x *GetRegionMinGameRsp) Reset() {
	*x = GetRegionMinGameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionMinGameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionMinGameRsp) ProtoMessage() {}

func (x *GetRegionMinGameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionMinGameRsp.ProtoReflect.Descriptor instead.
func (*GetRegionMinGameRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{15}
}

func (x *GetRegionMinGameRsp) GetMinGsAppId() uint32 {
	if x != nil {
		return x.MinGsAppId
	}
	return 0
}

type GetRegionKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionName string `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
}

func (x *GetRegionKeyReq) Reset() {
	*x = GetRegionKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionKeyReq) ProtoMessage() {}

func (x *GetRegionKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionKeyReq.ProtoReflect.Descriptor instead.
func (*GetRegionKeyReq) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{16}
}

func (x *GetRegionKeyReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

type GetRegionKeyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSecretKey []byte `protobuf:"bytes,1,opt,name=client_secret_key,json=clientSecretKey,proto3" json:"client_secret_key,omitempty"`
}

func (x *GetRegionKeyRsp) Reset() {
	*x = GetRegionKeyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionKeyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionKeyRsp) ProtoMessage() {}

func (x *GetRegionKeyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionKeyRsp.ProtoReflect.Descriptor instead.
func (*GetRegionKeyRsp) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{17}
}

func (x *GetRegionKeyRsp) GetClientSecretKey() []byte {
	if x != nil {
		return x.ClientSecretKey
	}
	return nil
}

var File_node_proto protoreflect.FileDescriptor

var file_node_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x22, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x22, 0xea, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x71,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x71, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x22, 0x3e, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x6f, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x22, 0x8a, 0x02, 0x0a, 0x12, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69,
	0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x71, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x71,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x3f, 0x0a, 0x12, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x71, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x71, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x71, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0c, 0x47,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x71, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x71, 0x41, 0x64, 0x64, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x10, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x54, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x86, 0x02, 0x0a, 0x0a, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x47, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x69, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0f,
	0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x21, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x73, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x47, 0x73,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x2a, 0x2a, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x10, 0x01, 0x2a, 0x8f, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x55, 0x4c,
	0x54, 0x49, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x4d, 0x55, 0x49, 0x50, 0x10, 0x06, 0x2a, 0x8a, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x72, 0x6f, 0x77, 0x64, 0x65, 0x64, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x04, 0x32, 0xbd, 0x04, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0f, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x65,
	0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x71, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x71, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x71,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_proto_rawDescOnce sync.Once
	file_node_proto_rawDescData = file_node_proto_rawDesc
)

func file_node_proto_rawDescGZIP() []byte {
	file_node_proto_rawDescOnce.Do(func() {
		file_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_proto_rawDescData)
	})
	return file_node_proto_rawDescData
}

var file_node_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_node_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_node_proto_goTypes = []interface{}{
	(Retcode)(0),                  // 0: proto.Retcode
	(ServerType)(0),               // 1: proto.ServerType
	(ServerStatus)(0),             // 2: proto.ServerStatus
	(*TestReq)(nil),               // 3: proto.TestReq
	(*TestRsp)(nil),               // 4: proto.TestRsp
	(*RegisterServerReq)(nil),     // 5: proto.RegisterServerReq
	(*RegisterServerRsp)(nil),     // 6: proto.RegisterServerRsp
	(*CloseServerReq)(nil),        // 7: proto.CloseServerReq
	(*CloseServerRsp)(nil),        // 8: proto.CloseServerRsp
	(*KeepaliveServerReq)(nil),    // 9: proto.KeepaliveServerReq
	(*KeepaliveServerRsp)(nil),    // 10: proto.KeepaliveServerRsp
	(*GetAllGateServerMqReq)(nil), // 11: proto.GetAllGateServerMqReq
	(*GetAllGateServerMqRsp)(nil), // 12: proto.GetAllGateServerMqRsp
	(*GateServerMq)(nil),          // 13: proto.GateServerMq
	(*GetAllRegionInfoReq)(nil),   // 14: proto.GetAllRegionInfoReq
	(*GetAllRegionInfoRsp)(nil),   // 15: proto.GetAllRegionInfoRsp
	(*RegionInfo)(nil),            // 16: proto.RegionInfo
	(*GetRegionMinGameReq)(nil),   // 17: proto.GetRegionMinGameReq
	(*GetRegionMinGameRsp)(nil),   // 18: proto.GetRegionMinGameRsp
	(*GetRegionKeyReq)(nil),       // 19: proto.GetRegionKeyReq
	(*GetRegionKeyRsp)(nil),       // 20: proto.GetRegionKeyRsp
	nil,                           // 21: proto.GetAllRegionInfoRsp.RegionInfoListEntry
}
var file_node_proto_depIdxs = []int32{
	1,  // 0: proto.RegisterServerReq.type:type_name -> proto.ServerType
	0,  // 1: proto.RegisterServerRsp.ret_code:type_name -> proto.Retcode
	1,  // 2: proto.CloseServerReq.type:type_name -> proto.ServerType
	1,  // 3: proto.KeepaliveServerReq.type:type_name -> proto.ServerType
	0,  // 4: proto.KeepaliveServerRsp.ret_code:type_name -> proto.Retcode
	13, // 5: proto.GetAllGateServerMqRsp.server_list:type_name -> proto.GateServerMq
	21, // 6: proto.GetAllRegionInfoRsp.region_info_list:type_name -> proto.GetAllRegionInfoRsp.RegionInfoListEntry
	16, // 7: proto.GetAllRegionInfoRsp.RegionInfoListEntry.value:type_name -> proto.RegionInfo
	3,  // 8: proto.NodeDiscovery.Test:input_type -> proto.TestReq
	5,  // 9: proto.NodeDiscovery.RegisterServer:input_type -> proto.RegisterServerReq
	7,  // 10: proto.NodeDiscovery.CloseServer:input_type -> proto.CloseServerReq
	9,  // 11: proto.NodeDiscovery.KeepaliveServer:input_type -> proto.KeepaliveServerReq
	11, // 12: proto.NodeDiscovery.GetAllGateServerMq:input_type -> proto.GetAllGateServerMqReq
	14, // 13: proto.NodeDiscovery.GetAllRegionInfo:input_type -> proto.GetAllRegionInfoReq
	17, // 14: proto.NodeDiscovery.GetRegionMinGame:input_type -> proto.GetRegionMinGameReq
	19, // 15: proto.NodeDiscovery.GetRegionKey:input_type -> proto.GetRegionKeyReq
	4,  // 16: proto.NodeDiscovery.Test:output_type -> proto.TestRsp
	6,  // 17: proto.NodeDiscovery.RegisterServer:output_type -> proto.RegisterServerRsp
	8,  // 18: proto.NodeDiscovery.CloseServer:output_type -> proto.CloseServerRsp
	10, // 19: proto.NodeDiscovery.KeepaliveServer:output_type -> proto.KeepaliveServerRsp
	12, // 20: proto.NodeDiscovery.GetAllGateServerMq:output_type -> proto.GetAllGateServerMqRsp
	15, // 21: proto.NodeDiscovery.GetAllRegionInfo:output_type -> proto.GetAllRegionInfoRsp
	18, // 22: proto.NodeDiscovery.GetRegionMinGame:output_type -> proto.GetRegionMinGameRsp
	20, // 23: proto.NodeDiscovery.GetRegionKey:output_type -> proto.GetRegionKeyRsp
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_node_proto_init() }
func file_node_proto_init() {
	if File_node_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseServerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepaliveServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepaliveServerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGateServerMqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGateServerMqRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateServerMq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRegionInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRegionInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionMinGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionMinGameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionKeyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_proto_goTypes,
		DependencyIndexes: file_node_proto_depIdxs,
		EnumInfos:         file_node_proto_enumTypes,
		MessageInfos:      file_node_proto_msgTypes,
	}.Build()
	File_node_proto = out.File
	file_node_proto_rawDesc = nil
	file_node_proto_goTypes = nil
	file_node_proto_depIdxs = nil
}
