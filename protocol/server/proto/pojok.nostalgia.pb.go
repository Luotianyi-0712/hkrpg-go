// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: pojok.nostalgia.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PojokNostalgia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AetherDivide *AetherDivide `protobuf:"bytes,1,opt,name=aether_divide,json=aetherDivide,proto3" json:"aether_divide,omitempty"` //以太战线
}

func (x *PojokNostalgia) Reset() {
	*x = PojokNostalgia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pojok_nostalgia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PojokNostalgia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PojokNostalgia) ProtoMessage() {}

func (x *PojokNostalgia) ProtoReflect() protoreflect.Message {
	mi := &file_pojok_nostalgia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PojokNostalgia.ProtoReflect.Descriptor instead.
func (*PojokNostalgia) Descriptor() ([]byte, []int) {
	return file_pojok_nostalgia_proto_rawDescGZIP(), []int{0}
}

func (x *PojokNostalgia) GetAetherDivide() *AetherDivide {
	if x != nil {
		return x.AetherDivide
	}
	return nil
}

type AetherDivide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarList      map[uint32]*AetherDivideAvatarInfo `protobuf:"bytes,1,rep,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                  // 角色信息
	Lineup          map[uint32]*AetherDivideLineup     `protobuf:"bytes,2,rep,name=lineup,proto3" json:"lineup,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                                            // 队伍信息
	AetherSkillList map[uint32]*AetherSkill            `protobuf:"bytes,3,rep,name=aether_skill_list,json=aetherSkillList,proto3" json:"aether_skill_list,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 道具列表
}

func (x *AetherDivide) Reset() {
	*x = AetherDivide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pojok_nostalgia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AetherDivide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AetherDivide) ProtoMessage() {}

func (x *AetherDivide) ProtoReflect() protoreflect.Message {
	mi := &file_pojok_nostalgia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AetherDivide.ProtoReflect.Descriptor instead.
func (*AetherDivide) Descriptor() ([]byte, []int) {
	return file_pojok_nostalgia_proto_rawDescGZIP(), []int{1}
}

func (x *AetherDivide) GetAvatarList() map[uint32]*AetherDivideAvatarInfo {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

func (x *AetherDivide) GetLineup() map[uint32]*AetherDivideLineup {
	if x != nil {
		return x.Lineup
	}
	return nil
}

func (x *AetherDivide) GetAetherSkillList() map[uint32]*AetherSkill {
	if x != nil {
		return x.AetherSkillList
	}
	return nil
}

type AetherDivideAvatarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId     uint32            `protobuf:"varint,1,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Promotion    uint32            `protobuf:"varint,2,opt,name=promotion,proto3" json:"promotion,omitempty"`                                                                                                                    // 突破等级
	PassiveSkill map[uint32]uint32 `protobuf:"bytes,3,rep,name=passive_skill,json=passiveSkill,proto3" json:"passive_skill,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 装备道具
	// uint32 exp = 4;
	CurSp uint32 `protobuf:"varint,5,opt,name=cur_sp,json=curSp,proto3" json:"cur_sp,omitempty"`
	MaxSp uint32 `protobuf:"varint,6,opt,name=max_sp,json=maxSp,proto3" json:"max_sp,omitempty"`
}

func (x *AetherDivideAvatarInfo) Reset() {
	*x = AetherDivideAvatarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pojok_nostalgia_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AetherDivideAvatarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AetherDivideAvatarInfo) ProtoMessage() {}

func (x *AetherDivideAvatarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pojok_nostalgia_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AetherDivideAvatarInfo.ProtoReflect.Descriptor instead.
func (*AetherDivideAvatarInfo) Descriptor() ([]byte, []int) {
	return file_pojok_nostalgia_proto_rawDescGZIP(), []int{2}
}

func (x *AetherDivideAvatarInfo) GetAvatarId() uint32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AetherDivideAvatarInfo) GetPromotion() uint32 {
	if x != nil {
		return x.Promotion
	}
	return 0
}

func (x *AetherDivideAvatarInfo) GetPassiveSkill() map[uint32]uint32 {
	if x != nil {
		return x.PassiveSkill
	}
	return nil
}

func (x *AetherDivideAvatarInfo) GetCurSp() uint32 {
	if x != nil {
		return x.CurSp
	}
	return 0
}

func (x *AetherDivideAvatarInfo) GetMaxSp() uint32 {
	if x != nil {
		return x.MaxSp
	}
	return 0
}

type AetherDivideLineup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                                    //序号
	AvatarList []uint32 `protobuf:"varint,2,rep,packed,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty"` // 角色列表
}

func (x *AetherDivideLineup) Reset() {
	*x = AetherDivideLineup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pojok_nostalgia_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AetherDivideLineup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AetherDivideLineup) ProtoMessage() {}

func (x *AetherDivideLineup) ProtoReflect() protoreflect.Message {
	mi := &file_pojok_nostalgia_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AetherDivideLineup.ProtoReflect.Descriptor instead.
func (*AetherDivideLineup) Descriptor() ([]byte, []int) {
	return file_pojok_nostalgia_proto_rawDescGZIP(), []int{3}
}

func (x *AetherDivideLineup) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AetherDivideLineup) GetAvatarList() []uint32 {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

type AetherSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                        // id
	Num           uint32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                                            // 数量
	DressAvatarId uint32 `protobuf:"varint,3,opt,name=dress_avatar_id,json=dressAvatarId,proto3" json:"dress_avatar_id,omitempty"` // 装备角色
}

func (x *AetherSkill) Reset() {
	*x = AetherSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pojok_nostalgia_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AetherSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AetherSkill) ProtoMessage() {}

func (x *AetherSkill) ProtoReflect() protoreflect.Message {
	mi := &file_pojok_nostalgia_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AetherSkill.ProtoReflect.Descriptor instead.
func (*AetherSkill) Descriptor() ([]byte, []int) {
	return file_pojok_nostalgia_proto_rawDescGZIP(), []int{4}
}

func (x *AetherSkill) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AetherSkill) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *AetherSkill) GetDressAvatarId() uint32 {
	if x != nil {
		return x.DressAvatarId
	}
	return 0
}

var File_pojok_nostalgia_proto protoreflect.FileDescriptor

var file_pojok_nostalgia_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6f, 0x6a, 0x6f, 0x6b, 0x2e, 0x6e, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x67, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a,
	0x0a, 0x0e, 0x50, 0x6f, 0x6a, 0x6f, 0x6b, 0x4e, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x67, 0x69, 0x61,
	0x12, 0x38, 0x0a, 0x0d, 0x61, 0x65, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x52, 0x0c, 0x61, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x22, 0xef, 0x03, 0x0a, 0x0c, 0x41,
	0x65, 0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x2e, 0x41, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x61, 0x65, 0x74, 0x68, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x5c, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x54,
	0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x56, 0x0a, 0x14, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x02, 0x0a,
	0x16, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x5f,
	0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x75, 0x72, 0x53, 0x70, 0x12,
	0x15, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x1a, 0x3f, 0x0a, 0x11, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x12, 0x41, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x0b, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pojok_nostalgia_proto_rawDescOnce sync.Once
	file_pojok_nostalgia_proto_rawDescData = file_pojok_nostalgia_proto_rawDesc
)

func file_pojok_nostalgia_proto_rawDescGZIP() []byte {
	file_pojok_nostalgia_proto_rawDescOnce.Do(func() {
		file_pojok_nostalgia_proto_rawDescData = protoimpl.X.CompressGZIP(file_pojok_nostalgia_proto_rawDescData)
	})
	return file_pojok_nostalgia_proto_rawDescData
}

var file_pojok_nostalgia_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pojok_nostalgia_proto_goTypes = []interface{}{
	(*PojokNostalgia)(nil),         // 0: proto.PojokNostalgia
	(*AetherDivide)(nil),           // 1: proto.AetherDivide
	(*AetherDivideAvatarInfo)(nil), // 2: proto.AetherDivideAvatarInfo
	(*AetherDivideLineup)(nil),     // 3: proto.AetherDivideLineup
	(*AetherSkill)(nil),            // 4: proto.AetherSkill
	nil,                            // 5: proto.AetherDivide.AvatarListEntry
	nil,                            // 6: proto.AetherDivide.LineupEntry
	nil,                            // 7: proto.AetherDivide.AetherSkillListEntry
	nil,                            // 8: proto.AetherDivideAvatarInfo.PassiveSkillEntry
}
var file_pojok_nostalgia_proto_depIdxs = []int32{
	1, // 0: proto.PojokNostalgia.aether_divide:type_name -> proto.AetherDivide
	5, // 1: proto.AetherDivide.avatar_list:type_name -> proto.AetherDivide.AvatarListEntry
	6, // 2: proto.AetherDivide.lineup:type_name -> proto.AetherDivide.LineupEntry
	7, // 3: proto.AetherDivide.aether_skill_list:type_name -> proto.AetherDivide.AetherSkillListEntry
	8, // 4: proto.AetherDivideAvatarInfo.passive_skill:type_name -> proto.AetherDivideAvatarInfo.PassiveSkillEntry
	2, // 5: proto.AetherDivide.AvatarListEntry.value:type_name -> proto.AetherDivideAvatarInfo
	3, // 6: proto.AetherDivide.LineupEntry.value:type_name -> proto.AetherDivideLineup
	4, // 7: proto.AetherDivide.AetherSkillListEntry.value:type_name -> proto.AetherSkill
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pojok_nostalgia_proto_init() }
func file_pojok_nostalgia_proto_init() {
	if File_pojok_nostalgia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pojok_nostalgia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PojokNostalgia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pojok_nostalgia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AetherDivide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pojok_nostalgia_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AetherDivideAvatarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pojok_nostalgia_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AetherDivideLineup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pojok_nostalgia_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AetherSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pojok_nostalgia_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pojok_nostalgia_proto_goTypes,
		DependencyIndexes: file_pojok_nostalgia_proto_depIdxs,
		MessageInfos:      file_pojok_nostalgia_proto_msgTypes,
	}.Build()
	File_pojok_nostalgia_proto = out.File
	file_pojok_nostalgia_proto_rawDesc = nil
	file_pojok_nostalgia_proto_goTypes = nil
	file_pojok_nostalgia_proto_depIdxs = nil
}
