// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: DBHLDAELOFI.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DBHLDAELOFI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE *MGLFIDHLBPB `protobuf:"bytes,2,opt,name=MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE,json=MONOPOLYACTIONRESULTSOURCETYPEASSETUPGRADE,proto3" json:"MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE,omitempty"`
	AFPOBALAEGK                                      *OBFKMALBGML `protobuf:"bytes,5,opt,name=AFPOBALAEGK,proto3" json:"AFPOBALAEGK,omitempty"`
	IGOLGKPIJMN                                      *AGMCNKBLLIA `protobuf:"bytes,1,opt,name=IGOLGKPIJMN,proto3" json:"IGOLGKPIJMN,omitempty"`
	// Types that are assignable to MLFNMMJAICC:
	//
	//	*DBHLDAELOFI_COOJHFNEOIP
	//	*DBHLDAELOFI_MOBAJEJDEIJ
	//	*DBHLDAELOFI_NLAOOCOLJAC
	//	*DBHLDAELOFI_GetBuffList
	//	*DBHLDAELOFI_RemoveBuffList
	//	*DBHLDAELOFI_FGDAHHOHGPE
	//	*DBHLDAELOFI_FNDIMEGKCLF
	//	*DBHLDAELOFI_FIHODDCBEGN
	//	*DBHLDAELOFI_OGLIHGHLOFC
	//	*DBHLDAELOFI_JCLKFJPCJNI
	MLFNMMJAICC isDBHLDAELOFI_MLFNMMJAICC `protobuf_oneof:"MLFNMMJAICC"`
}

func (x *DBHLDAELOFI) Reset() {
	*x = DBHLDAELOFI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DBHLDAELOFI_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBHLDAELOFI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBHLDAELOFI) ProtoMessage() {}

func (x *DBHLDAELOFI) ProtoReflect() protoreflect.Message {
	mi := &file_DBHLDAELOFI_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBHLDAELOFI.ProtoReflect.Descriptor instead.
func (*DBHLDAELOFI) Descriptor() ([]byte, []int) {
	return file_DBHLDAELOFI_proto_rawDescGZIP(), []int{0}
}

func (x *DBHLDAELOFI) GetMONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE() *MGLFIDHLBPB {
	if x != nil {
		return x.MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE
	}
	return nil
}

func (x *DBHLDAELOFI) GetAFPOBALAEGK() *OBFKMALBGML {
	if x != nil {
		return x.AFPOBALAEGK
	}
	return nil
}

func (x *DBHLDAELOFI) GetIGOLGKPIJMN() *AGMCNKBLLIA {
	if x != nil {
		return x.IGOLGKPIJMN
	}
	return nil
}

func (m *DBHLDAELOFI) GetMLFNMMJAICC() isDBHLDAELOFI_MLFNMMJAICC {
	if m != nil {
		return m.MLFNMMJAICC
	}
	return nil
}

func (x *DBHLDAELOFI) GetCOOJHFNEOIP() *ODPLDIICIBB {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_COOJHFNEOIP); ok {
		return x.COOJHFNEOIP
	}
	return nil
}

func (x *DBHLDAELOFI) GetMOBAJEJDEIJ() *ODPLDIICIBB {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_MOBAJEJDEIJ); ok {
		return x.MOBAJEJDEIJ
	}
	return nil
}

func (x *DBHLDAELOFI) GetNLAOOCOLJAC() *MGLFIDHLBPB {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_NLAOOCOLJAC); ok {
		return x.NLAOOCOLJAC
	}
	return nil
}

func (x *DBHLDAELOFI) GetGetBuffList() *NOBNJOEHEKP {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_GetBuffList); ok {
		return x.GetBuffList
	}
	return nil
}

func (x *DBHLDAELOFI) GetRemoveBuffList() *NOBNJOEHEKP {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_RemoveBuffList); ok {
		return x.RemoveBuffList
	}
	return nil
}

func (x *DBHLDAELOFI) GetFGDAHHOHGPE() *AGMCNKBLLIA {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_FGDAHHOHGPE); ok {
		return x.FGDAHHOHGPE
	}
	return nil
}

func (x *DBHLDAELOFI) GetFNDIMEGKCLF() *AGMCNKBLLIA {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_FNDIMEGKCLF); ok {
		return x.FNDIMEGKCLF
	}
	return nil
}

func (x *DBHLDAELOFI) GetFIHODDCBEGN() *LODICMJKDON {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_FIHODDCBEGN); ok {
		return x.FIHODDCBEGN
	}
	return nil
}

func (x *DBHLDAELOFI) GetOGLIHGHLOFC() *NOBNJOEHEKP {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_OGLIHGHLOFC); ok {
		return x.OGLIHGHLOFC
	}
	return nil
}

func (x *DBHLDAELOFI) GetJCLKFJPCJNI() *EKDKDGBMDDE {
	if x, ok := x.GetMLFNMMJAICC().(*DBHLDAELOFI_JCLKFJPCJNI); ok {
		return x.JCLKFJPCJNI
	}
	return nil
}

type isDBHLDAELOFI_MLFNMMJAICC interface {
	isDBHLDAELOFI_MLFNMMJAICC()
}

type DBHLDAELOFI_COOJHFNEOIP struct {
	COOJHFNEOIP *ODPLDIICIBB `protobuf:"bytes,12,opt,name=COOJHFNEOIP,proto3,oneof"`
}

type DBHLDAELOFI_MOBAJEJDEIJ struct {
	MOBAJEJDEIJ *ODPLDIICIBB `protobuf:"bytes,11,opt,name=MOBAJEJDEIJ,proto3,oneof"`
}

type DBHLDAELOFI_NLAOOCOLJAC struct {
	NLAOOCOLJAC *MGLFIDHLBPB `protobuf:"bytes,7,opt,name=NLAOOCOLJAC,proto3,oneof"`
}

type DBHLDAELOFI_GetBuffList struct {
	GetBuffList *NOBNJOEHEKP `protobuf:"bytes,6,opt,name=get_buff_list,json=getBuffList,proto3,oneof"`
}

type DBHLDAELOFI_RemoveBuffList struct {
	RemoveBuffList *NOBNJOEHEKP `protobuf:"bytes,3,opt,name=remove_buff_list,json=removeBuffList,proto3,oneof"`
}

type DBHLDAELOFI_FGDAHHOHGPE struct {
	FGDAHHOHGPE *AGMCNKBLLIA `protobuf:"bytes,10,opt,name=FGDAHHOHGPE,proto3,oneof"`
}

type DBHLDAELOFI_FNDIMEGKCLF struct {
	FNDIMEGKCLF *AGMCNKBLLIA `protobuf:"bytes,13,opt,name=FNDIMEGKCLF,proto3,oneof"`
}

type DBHLDAELOFI_FIHODDCBEGN struct {
	FIHODDCBEGN *LODICMJKDON `protobuf:"bytes,15,opt,name=FIHODDCBEGN,proto3,oneof"`
}

type DBHLDAELOFI_OGLIHGHLOFC struct {
	OGLIHGHLOFC *NOBNJOEHEKP `protobuf:"bytes,4,opt,name=OGLIHGHLOFC,proto3,oneof"`
}

type DBHLDAELOFI_JCLKFJPCJNI struct {
	JCLKFJPCJNI *EKDKDGBMDDE `protobuf:"bytes,9,opt,name=JCLKFJPCJNI,proto3,oneof"`
}

func (*DBHLDAELOFI_COOJHFNEOIP) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_MOBAJEJDEIJ) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_NLAOOCOLJAC) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_GetBuffList) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_RemoveBuffList) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_FGDAHHOHGPE) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_FNDIMEGKCLF) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_FIHODDCBEGN) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_OGLIHGHLOFC) isDBHLDAELOFI_MLFNMMJAICC() {}

func (*DBHLDAELOFI_JCLKFJPCJNI) isDBHLDAELOFI_MLFNMMJAICC() {}

var File_DBHLDAELOFI_proto protoreflect.FileDescriptor

var file_DBHLDAELOFI_proto_rawDesc = []byte{
	0x0a, 0x11, 0x44, 0x42, 0x48, 0x4c, 0x44, 0x41, 0x45, 0x4c, 0x4f, 0x46, 0x49, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x47, 0x4c, 0x46, 0x49, 0x44, 0x48, 0x4c, 0x42, 0x50, 0x42,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f, 0x42, 0x46, 0x4b, 0x4d, 0x41, 0x4c, 0x42,
	0x47, 0x4d, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4e, 0x4f, 0x42, 0x4e, 0x4a,
	0x4f, 0x45, 0x48, 0x45, 0x4b, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f, 0x44,
	0x50, 0x4c, 0x44, 0x49, 0x49, 0x43, 0x49, 0x42, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x41, 0x47, 0x4d, 0x43, 0x4e, 0x4b, 0x42, 0x4c, 0x4c, 0x49, 0x41, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4c, 0x4f, 0x44, 0x49, 0x43, 0x4d, 0x4a, 0x4b, 0x44, 0x4f, 0x4e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x4b, 0x44, 0x4b, 0x44, 0x47, 0x42, 0x4d, 0x44,
	0x44, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x05, 0x0a, 0x0b, 0x44, 0x42, 0x48,
	0x4c, 0x44, 0x41, 0x45, 0x4c, 0x4f, 0x46, 0x49, 0x12, 0x72, 0x0a, 0x30, 0x4d, 0x4f, 0x4e, 0x4f,
	0x50, 0x4f, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x53, 0x53, 0x45, 0x54, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x47, 0x4c, 0x46, 0x49, 0x44, 0x48, 0x4c, 0x42, 0x50, 0x42,
	0x52, 0x2a, 0x4d, 0x4f, 0x4e, 0x4f, 0x50, 0x4f, 0x4c, 0x59, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x54, 0x59, 0x50, 0x45,
	0x41, 0x53, 0x53, 0x45, 0x54, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x12, 0x2e, 0x0a, 0x0b,
	0x41, 0x46, 0x50, 0x4f, 0x42, 0x41, 0x4c, 0x41, 0x45, 0x47, 0x4b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x42, 0x46, 0x4b, 0x4d, 0x41, 0x4c, 0x42, 0x47, 0x4d, 0x4c, 0x52,
	0x0b, 0x41, 0x46, 0x50, 0x4f, 0x42, 0x41, 0x4c, 0x41, 0x45, 0x47, 0x4b, 0x12, 0x2e, 0x0a, 0x0b,
	0x49, 0x47, 0x4f, 0x4c, 0x47, 0x4b, 0x50, 0x49, 0x4a, 0x4d, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x47, 0x4d, 0x43, 0x4e, 0x4b, 0x42, 0x4c, 0x4c, 0x49, 0x41, 0x52,
	0x0b, 0x49, 0x47, 0x4f, 0x4c, 0x47, 0x4b, 0x50, 0x49, 0x4a, 0x4d, 0x4e, 0x12, 0x30, 0x0a, 0x0b,
	0x43, 0x4f, 0x4f, 0x4a, 0x48, 0x46, 0x4e, 0x45, 0x4f, 0x49, 0x50, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x44, 0x50, 0x4c, 0x44, 0x49, 0x49, 0x43, 0x49, 0x42, 0x42, 0x48,
	0x00, 0x52, 0x0b, 0x43, 0x4f, 0x4f, 0x4a, 0x48, 0x46, 0x4e, 0x45, 0x4f, 0x49, 0x50, 0x12, 0x30,
	0x0a, 0x0b, 0x4d, 0x4f, 0x42, 0x41, 0x4a, 0x45, 0x4a, 0x44, 0x45, 0x49, 0x4a, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x44, 0x50, 0x4c, 0x44, 0x49, 0x49, 0x43, 0x49, 0x42,
	0x42, 0x48, 0x00, 0x52, 0x0b, 0x4d, 0x4f, 0x42, 0x41, 0x4a, 0x45, 0x4a, 0x44, 0x45, 0x49, 0x4a,
	0x12, 0x30, 0x0a, 0x0b, 0x4e, 0x4c, 0x41, 0x4f, 0x4f, 0x43, 0x4f, 0x4c, 0x4a, 0x41, 0x43, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x47, 0x4c, 0x46, 0x49, 0x44, 0x48, 0x4c,
	0x42, 0x50, 0x42, 0x48, 0x00, 0x52, 0x0b, 0x4e, 0x4c, 0x41, 0x4f, 0x4f, 0x43, 0x4f, 0x4c, 0x4a,
	0x41, 0x43, 0x12, 0x32, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x4f, 0x42, 0x4e,
	0x4a, 0x4f, 0x45, 0x48, 0x45, 0x4b, 0x50, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x42, 0x75,
	0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4e, 0x4f, 0x42, 0x4e, 0x4a, 0x4f, 0x45, 0x48, 0x45, 0x4b, 0x50, 0x48, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x0b, 0x46, 0x47, 0x44, 0x41, 0x48, 0x48, 0x4f, 0x48, 0x47, 0x50, 0x45, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x47, 0x4d, 0x43, 0x4e, 0x4b, 0x42, 0x4c,
	0x4c, 0x49, 0x41, 0x48, 0x00, 0x52, 0x0b, 0x46, 0x47, 0x44, 0x41, 0x48, 0x48, 0x4f, 0x48, 0x47,
	0x50, 0x45, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x4e, 0x44, 0x49, 0x4d, 0x45, 0x47, 0x4b, 0x43, 0x4c,
	0x46, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x47, 0x4d, 0x43, 0x4e, 0x4b,
	0x42, 0x4c, 0x4c, 0x49, 0x41, 0x48, 0x00, 0x52, 0x0b, 0x46, 0x4e, 0x44, 0x49, 0x4d, 0x45, 0x47,
	0x4b, 0x43, 0x4c, 0x46, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x49, 0x48, 0x4f, 0x44, 0x44, 0x43, 0x42,
	0x45, 0x47, 0x4e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x4f, 0x44, 0x49,
	0x43, 0x4d, 0x4a, 0x4b, 0x44, 0x4f, 0x4e, 0x48, 0x00, 0x52, 0x0b, 0x46, 0x49, 0x48, 0x4f, 0x44,
	0x44, 0x43, 0x42, 0x45, 0x47, 0x4e, 0x12, 0x30, 0x0a, 0x0b, 0x4f, 0x47, 0x4c, 0x49, 0x48, 0x47,
	0x48, 0x4c, 0x4f, 0x46, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x4f,
	0x42, 0x4e, 0x4a, 0x4f, 0x45, 0x48, 0x45, 0x4b, 0x50, 0x48, 0x00, 0x52, 0x0b, 0x4f, 0x47, 0x4c,
	0x49, 0x48, 0x47, 0x48, 0x4c, 0x4f, 0x46, 0x43, 0x12, 0x30, 0x0a, 0x0b, 0x4a, 0x43, 0x4c, 0x4b,
	0x46, 0x4a, 0x50, 0x43, 0x4a, 0x4e, 0x49, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x45, 0x4b, 0x44, 0x4b, 0x44, 0x47, 0x42, 0x4d, 0x44, 0x44, 0x45, 0x48, 0x00, 0x52, 0x0b, 0x4a,
	0x43, 0x4c, 0x4b, 0x46, 0x4a, 0x50, 0x43, 0x4a, 0x4e, 0x49, 0x42, 0x0d, 0x0a, 0x0b, 0x4d, 0x4c,
	0x46, 0x4e, 0x4d, 0x4d, 0x4a, 0x41, 0x49, 0x43, 0x43, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67,
	0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_DBHLDAELOFI_proto_rawDescOnce sync.Once
	file_DBHLDAELOFI_proto_rawDescData = file_DBHLDAELOFI_proto_rawDesc
)

func file_DBHLDAELOFI_proto_rawDescGZIP() []byte {
	file_DBHLDAELOFI_proto_rawDescOnce.Do(func() {
		file_DBHLDAELOFI_proto_rawDescData = protoimpl.X.CompressGZIP(file_DBHLDAELOFI_proto_rawDescData)
	})
	return file_DBHLDAELOFI_proto_rawDescData
}

var file_DBHLDAELOFI_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_DBHLDAELOFI_proto_goTypes = []interface{}{
	(*DBHLDAELOFI)(nil), // 0: DBHLDAELOFI
	(*MGLFIDHLBPB)(nil), // 1: MGLFIDHLBPB
	(*OBFKMALBGML)(nil), // 2: OBFKMALBGML
	(*AGMCNKBLLIA)(nil), // 3: AGMCNKBLLIA
	(*ODPLDIICIBB)(nil), // 4: ODPLDIICIBB
	(*NOBNJOEHEKP)(nil), // 5: NOBNJOEHEKP
	(*LODICMJKDON)(nil), // 6: LODICMJKDON
	(*EKDKDGBMDDE)(nil), // 7: EKDKDGBMDDE
}
var file_DBHLDAELOFI_proto_depIdxs = []int32{
	1,  // 0: DBHLDAELOFI.MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE:type_name -> MGLFIDHLBPB
	2,  // 1: DBHLDAELOFI.AFPOBALAEGK:type_name -> OBFKMALBGML
	3,  // 2: DBHLDAELOFI.IGOLGKPIJMN:type_name -> AGMCNKBLLIA
	4,  // 3: DBHLDAELOFI.COOJHFNEOIP:type_name -> ODPLDIICIBB
	4,  // 4: DBHLDAELOFI.MOBAJEJDEIJ:type_name -> ODPLDIICIBB
	1,  // 5: DBHLDAELOFI.NLAOOCOLJAC:type_name -> MGLFIDHLBPB
	5,  // 6: DBHLDAELOFI.get_buff_list:type_name -> NOBNJOEHEKP
	5,  // 7: DBHLDAELOFI.remove_buff_list:type_name -> NOBNJOEHEKP
	3,  // 8: DBHLDAELOFI.FGDAHHOHGPE:type_name -> AGMCNKBLLIA
	3,  // 9: DBHLDAELOFI.FNDIMEGKCLF:type_name -> AGMCNKBLLIA
	6,  // 10: DBHLDAELOFI.FIHODDCBEGN:type_name -> LODICMJKDON
	5,  // 11: DBHLDAELOFI.OGLIHGHLOFC:type_name -> NOBNJOEHEKP
	7,  // 12: DBHLDAELOFI.JCLKFJPCJNI:type_name -> EKDKDGBMDDE
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_DBHLDAELOFI_proto_init() }
func file_DBHLDAELOFI_proto_init() {
	if File_DBHLDAELOFI_proto != nil {
		return
	}
	file_MGLFIDHLBPB_proto_init()
	file_OBFKMALBGML_proto_init()
	file_NOBNJOEHEKP_proto_init()
	file_ODPLDIICIBB_proto_init()
	file_AGMCNKBLLIA_proto_init()
	file_LODICMJKDON_proto_init()
	file_EKDKDGBMDDE_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_DBHLDAELOFI_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBHLDAELOFI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_DBHLDAELOFI_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DBHLDAELOFI_COOJHFNEOIP)(nil),
		(*DBHLDAELOFI_MOBAJEJDEIJ)(nil),
		(*DBHLDAELOFI_NLAOOCOLJAC)(nil),
		(*DBHLDAELOFI_GetBuffList)(nil),
		(*DBHLDAELOFI_RemoveBuffList)(nil),
		(*DBHLDAELOFI_FGDAHHOHGPE)(nil),
		(*DBHLDAELOFI_FNDIMEGKCLF)(nil),
		(*DBHLDAELOFI_FIHODDCBEGN)(nil),
		(*DBHLDAELOFI_OGLIHGHLOFC)(nil),
		(*DBHLDAELOFI_JCLKFJPCJNI)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DBHLDAELOFI_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DBHLDAELOFI_proto_goTypes,
		DependencyIndexes: file_DBHLDAELOFI_proto_depIdxs,
		MessageInfos:      file_DBHLDAELOFI_proto_msgTypes,
	}.Build()
	File_DBHLDAELOFI_proto = out.File
	file_DBHLDAELOFI_proto_rawDesc = nil
	file_DBHLDAELOFI_proto_goTypes = nil
	file_DBHLDAELOFI_proto_depIdxs = nil
}
