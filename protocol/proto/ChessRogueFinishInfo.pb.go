// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: ChessRogueFinishInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChessRogueFinishInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DifficultyLevel       uint32                `protobuf:"varint,1,opt,name=difficulty_level,json=difficultyLevel,proto3" json:"difficulty_level,omitempty"`
	APKNLGEGIIB           uint32                `protobuf:"varint,14,opt,name=APKNLGEGIIB,proto3" json:"APKNLGEGIIB,omitempty"`
	IsFinish              bool                  `protobuf:"varint,10,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	KIOAGGBEADM           uint32                `protobuf:"varint,901,opt,name=KIOAGGBEADM,proto3" json:"KIOAGGBEADM,omitempty"`
	FKGBBPJAFMF           uint32                `protobuf:"varint,1227,opt,name=FKGBBPJAFMF,proto3" json:"FKGBBPJAFMF,omitempty"`
	RogueBuffInfo         *ChessRogueBuff       `protobuf:"bytes,3,opt,name=rogue_buff_info,json=rogueBuffInfo,proto3" json:"rogue_buff_info,omitempty"`
	RogueSubMode          uint32                `protobuf:"varint,1436,opt,name=rogue_sub_mode,json=rogueSubMode,proto3" json:"rogue_sub_mode,omitempty"`
	OEDKAJFDIOC           uint32                `protobuf:"varint,8,opt,name=OEDKAJFDIOC,proto3" json:"OEDKAJFDIOC,omitempty"`
	BDMCHDMIIFJ           uint32                `protobuf:"varint,13,opt,name=BDMCHDMIIFJ,proto3" json:"BDMCHDMIIFJ,omitempty"`
	ScoreId               uint32                `protobuf:"varint,679,opt,name=score_id,json=scoreId,proto3" json:"score_id,omitempty"`
	MJEKAOINPPE           *DKMLDDDPLBI          `protobuf:"bytes,1090,opt,name=MJEKAOINPPE,proto3" json:"MJEKAOINPPE,omitempty"`
	IMCNDGPOEJH           *ItemList             `protobuf:"bytes,9,opt,name=IMCNDGPOEJH,proto3" json:"IMCNDGPOEJH,omitempty"`
	RogueLineup           *LineupInfo           `protobuf:"bytes,2,opt,name=rogue_lineup,json=rogueLineup,proto3" json:"rogue_lineup,omitempty"`
	AccountBy             ChessRogueAccountType `protobuf:"varint,4,opt,name=account_by,json=accountBy,proto3,enum=ChessRogueAccountType" json:"account_by,omitempty"`
	ELNLLDIFKLF           []uint32              `protobuf:"varint,7,rep,packed,name=ELNLLDIFKLF,proto3" json:"ELNLLDIFKLF,omitempty"`
	KOLEPEIFLLA           uint32                `protobuf:"varint,1118,opt,name=KOLEPEIFLLA,proto3" json:"KOLEPEIFLLA,omitempty"`
	GameMiracleInfo       *ChessRogueMiracle    `protobuf:"bytes,5,opt,name=game_miracle_info,json=gameMiracleInfo,proto3" json:"game_miracle_info,omitempty"`
	ChessRogueMainStoryId uint32                `protobuf:"varint,11,opt,name=chess_rogue_main_story_id,json=chessRogueMainStoryId,proto3" json:"chess_rogue_main_story_id,omitempty"`
	EMBCEJEEAKH           uint32                `protobuf:"varint,12,opt,name=EMBCEJEEAKH,proto3" json:"EMBCEJEEAKH,omitempty"`
}

func (x *ChessRogueFinishInfo) Reset() {
	*x = ChessRogueFinishInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ChessRogueFinishInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChessRogueFinishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChessRogueFinishInfo) ProtoMessage() {}

func (x *ChessRogueFinishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ChessRogueFinishInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChessRogueFinishInfo.ProtoReflect.Descriptor instead.
func (*ChessRogueFinishInfo) Descriptor() ([]byte, []int) {
	return file_ChessRogueFinishInfo_proto_rawDescGZIP(), []int{0}
}

func (x *ChessRogueFinishInfo) GetDifficultyLevel() uint32 {
	if x != nil {
		return x.DifficultyLevel
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetAPKNLGEGIIB() uint32 {
	if x != nil {
		return x.APKNLGEGIIB
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetIsFinish() bool {
	if x != nil {
		return x.IsFinish
	}
	return false
}

func (x *ChessRogueFinishInfo) GetKIOAGGBEADM() uint32 {
	if x != nil {
		return x.KIOAGGBEADM
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetFKGBBPJAFMF() uint32 {
	if x != nil {
		return x.FKGBBPJAFMF
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetRogueBuffInfo() *ChessRogueBuff {
	if x != nil {
		return x.RogueBuffInfo
	}
	return nil
}

func (x *ChessRogueFinishInfo) GetRogueSubMode() uint32 {
	if x != nil {
		return x.RogueSubMode
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetOEDKAJFDIOC() uint32 {
	if x != nil {
		return x.OEDKAJFDIOC
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetBDMCHDMIIFJ() uint32 {
	if x != nil {
		return x.BDMCHDMIIFJ
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetScoreId() uint32 {
	if x != nil {
		return x.ScoreId
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetMJEKAOINPPE() *DKMLDDDPLBI {
	if x != nil {
		return x.MJEKAOINPPE
	}
	return nil
}

func (x *ChessRogueFinishInfo) GetIMCNDGPOEJH() *ItemList {
	if x != nil {
		return x.IMCNDGPOEJH
	}
	return nil
}

func (x *ChessRogueFinishInfo) GetRogueLineup() *LineupInfo {
	if x != nil {
		return x.RogueLineup
	}
	return nil
}

func (x *ChessRogueFinishInfo) GetAccountBy() ChessRogueAccountType {
	if x != nil {
		return x.AccountBy
	}
	return ChessRogueAccountType_CHESS_ROGUE_ACCOUNT_BY_NONE
}

func (x *ChessRogueFinishInfo) GetELNLLDIFKLF() []uint32 {
	if x != nil {
		return x.ELNLLDIFKLF
	}
	return nil
}

func (x *ChessRogueFinishInfo) GetKOLEPEIFLLA() uint32 {
	if x != nil {
		return x.KOLEPEIFLLA
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetGameMiracleInfo() *ChessRogueMiracle {
	if x != nil {
		return x.GameMiracleInfo
	}
	return nil
}

func (x *ChessRogueFinishInfo) GetChessRogueMainStoryId() uint32 {
	if x != nil {
		return x.ChessRogueMainStoryId
	}
	return 0
}

func (x *ChessRogueFinishInfo) GetEMBCEJEEAKH() uint32 {
	if x != nil {
		return x.EMBCEJEEAKH
	}
	return 0
}

var File_ChessRogueFinishInfo_proto protoreflect.FileDescriptor

var file_ChessRogueFinishInfo_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x43, 0x68,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x44, 0x4b, 0x4d, 0x4c, 0x44, 0x44, 0x44, 0x50, 0x4c, 0x42,
	0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x06,
	0x0a, 0x14, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x50, 0x4b, 0x4e, 0x4c, 0x47, 0x45, 0x47, 0x49, 0x49, 0x42,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x41, 0x50, 0x4b, 0x4e, 0x4c, 0x47, 0x45, 0x47,
	0x49, 0x49, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x0b, 0x4b, 0x49, 0x4f, 0x41, 0x47, 0x47, 0x42, 0x45, 0x41, 0x44, 0x4d, 0x18,
	0x85, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4b, 0x49, 0x4f, 0x41, 0x47, 0x47, 0x42, 0x45,
	0x41, 0x44, 0x4d, 0x12, 0x21, 0x0a, 0x0b, 0x46, 0x4b, 0x47, 0x42, 0x42, 0x50, 0x4a, 0x41, 0x46,
	0x4d, 0x46, 0x18, 0xcb, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x46, 0x4b, 0x47, 0x42, 0x42,
	0x50, 0x4a, 0x41, 0x46, 0x4d, 0x46, 0x12, 0x37, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f,
	0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66,
	0x52, 0x0d, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x9c, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x53,
	0x75, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x45, 0x44, 0x4b, 0x41, 0x4a,
	0x46, 0x44, 0x49, 0x4f, 0x43, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4f, 0x45, 0x44,
	0x4b, 0x41, 0x4a, 0x46, 0x44, 0x49, 0x4f, 0x43, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x44, 0x4d, 0x43,
	0x48, 0x44, 0x4d, 0x49, 0x49, 0x46, 0x4a, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42,
	0x44, 0x4d, 0x43, 0x48, 0x44, 0x4d, 0x49, 0x49, 0x46, 0x4a, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xa7, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x4d, 0x4a, 0x45, 0x4b, 0x41, 0x4f,
	0x49, 0x4e, 0x50, 0x50, 0x45, 0x18, 0xc2, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44,
	0x4b, 0x4d, 0x4c, 0x44, 0x44, 0x44, 0x50, 0x4c, 0x42, 0x49, 0x52, 0x0b, 0x4d, 0x4a, 0x45, 0x4b,
	0x41, 0x4f, 0x49, 0x4e, 0x50, 0x50, 0x45, 0x12, 0x2b, 0x0a, 0x0b, 0x49, 0x4d, 0x43, 0x4e, 0x44,
	0x47, 0x50, 0x4f, 0x45, 0x4a, 0x48, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x49, 0x4d, 0x43, 0x4e, 0x44, 0x47, 0x50,
	0x4f, 0x45, 0x4a, 0x48, 0x12, 0x2e, 0x0a, 0x0c, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x4c, 0x69,
	0x6e, 0x65, 0x75, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x4c, 0x4e, 0x4c, 0x4c, 0x44, 0x49, 0x46, 0x4b, 0x4c, 0x46, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0b, 0x45, 0x4c, 0x4e, 0x4c, 0x4c, 0x44, 0x49, 0x46, 0x4b, 0x4c, 0x46, 0x12, 0x21, 0x0a,
	0x0b, 0x4b, 0x4f, 0x4c, 0x45, 0x50, 0x45, 0x49, 0x46, 0x4c, 0x4c, 0x41, 0x18, 0xde, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4b, 0x4f, 0x4c, 0x45, 0x50, 0x45, 0x49, 0x46, 0x4c, 0x4c, 0x41,
	0x12, 0x3e, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x68,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x52,
	0x0f, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x38, 0x0a, 0x19, 0x63, 0x68, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x63, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x4d,
	0x42, 0x43, 0x45, 0x4a, 0x45, 0x45, 0x41, 0x4b, 0x48, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x45, 0x4d, 0x42, 0x43, 0x45, 0x4a, 0x45, 0x45, 0x41, 0x4b, 0x48, 0x42, 0x2e, 0x5a, 0x0e,
	0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02,
	0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ChessRogueFinishInfo_proto_rawDescOnce sync.Once
	file_ChessRogueFinishInfo_proto_rawDescData = file_ChessRogueFinishInfo_proto_rawDesc
)

func file_ChessRogueFinishInfo_proto_rawDescGZIP() []byte {
	file_ChessRogueFinishInfo_proto_rawDescOnce.Do(func() {
		file_ChessRogueFinishInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_ChessRogueFinishInfo_proto_rawDescData)
	})
	return file_ChessRogueFinishInfo_proto_rawDescData
}

var file_ChessRogueFinishInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ChessRogueFinishInfo_proto_goTypes = []interface{}{
	(*ChessRogueFinishInfo)(nil), // 0: ChessRogueFinishInfo
	(*ChessRogueBuff)(nil),       // 1: ChessRogueBuff
	(*DKMLDDDPLBI)(nil),          // 2: DKMLDDDPLBI
	(*ItemList)(nil),             // 3: ItemList
	(*LineupInfo)(nil),           // 4: LineupInfo
	(ChessRogueAccountType)(0),   // 5: ChessRogueAccountType
	(*ChessRogueMiracle)(nil),    // 6: ChessRogueMiracle
}
var file_ChessRogueFinishInfo_proto_depIdxs = []int32{
	1, // 0: ChessRogueFinishInfo.rogue_buff_info:type_name -> ChessRogueBuff
	2, // 1: ChessRogueFinishInfo.MJEKAOINPPE:type_name -> DKMLDDDPLBI
	3, // 2: ChessRogueFinishInfo.IMCNDGPOEJH:type_name -> ItemList
	4, // 3: ChessRogueFinishInfo.rogue_lineup:type_name -> LineupInfo
	5, // 4: ChessRogueFinishInfo.account_by:type_name -> ChessRogueAccountType
	6, // 5: ChessRogueFinishInfo.game_miracle_info:type_name -> ChessRogueMiracle
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ChessRogueFinishInfo_proto_init() }
func file_ChessRogueFinishInfo_proto_init() {
	if File_ChessRogueFinishInfo_proto != nil {
		return
	}
	file_ChessRogueBuff_proto_init()
	file_LineupInfo_proto_init()
	file_DKMLDDDPLBI_proto_init()
	file_ItemList_proto_init()
	file_ChessRogueMiracle_proto_init()
	file_ChessRogueAccountType_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ChessRogueFinishInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChessRogueFinishInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ChessRogueFinishInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ChessRogueFinishInfo_proto_goTypes,
		DependencyIndexes: file_ChessRogueFinishInfo_proto_depIdxs,
		MessageInfos:      file_ChessRogueFinishInfo_proto_msgTypes,
	}.Build()
	File_ChessRogueFinishInfo_proto = out.File
	file_ChessRogueFinishInfo_proto_rawDesc = nil
	file_ChessRogueFinishInfo_proto_goTypes = nil
	file_ChessRogueFinishInfo_proto_depIdxs = nil
}
