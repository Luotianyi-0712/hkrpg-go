// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: RogueAction.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RogueAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*RogueAction_BuffSelectInfo
	//	*RogueAction_DPFCKAFMMIN
	//	*RogueAction_CACBBPGPBKH
	//	*RogueAction_DAIBBHKHIDD
	//	*RogueAction_MiracleSelectInfo
	//	*RogueAction_FJLKOPAEKNF
	//	*RogueAction_GAHIEDCAFDI
	//	*RogueAction_PEKPONIMHBI
	//	*RogueAction_AGPAICOJMNO
	//	*RogueAction_LDPABLAJIOC
	//	*RogueAction_BANALKDGPGA
	//	*RogueAction_BCLNDBJGNDD
	//	*RogueAction_BonusSelectInfo
	//	*RogueAction_RogueFormulaSelectInfo
	//	*RogueAction_JENLEOBILLP
	//	*RogueAction_LDPNACAKCNO
	Action isRogueAction_Action `protobuf_oneof:"action"`
}

func (x *RogueAction) Reset() {
	*x = RogueAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RogueAction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RogueAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RogueAction) ProtoMessage() {}

func (x *RogueAction) ProtoReflect() protoreflect.Message {
	mi := &file_RogueAction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RogueAction.ProtoReflect.Descriptor instead.
func (*RogueAction) Descriptor() ([]byte, []int) {
	return file_RogueAction_proto_rawDescGZIP(), []int{0}
}

func (m *RogueAction) GetAction() isRogueAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *RogueAction) GetBuffSelectInfo() *RogueCommonBuffSelectInfo {
	if x, ok := x.GetAction().(*RogueAction_BuffSelectInfo); ok {
		return x.BuffSelectInfo
	}
	return nil
}

func (x *RogueAction) GetDPFCKAFMMIN() *JGLOGGKPEIP {
	if x, ok := x.GetAction().(*RogueAction_DPFCKAFMMIN); ok {
		return x.DPFCKAFMMIN
	}
	return nil
}

func (x *RogueAction) GetCACBBPGPBKH() *MMGFIJKGEJD {
	if x, ok := x.GetAction().(*RogueAction_CACBBPGPBKH); ok {
		return x.CACBBPGPBKH
	}
	return nil
}

func (x *RogueAction) GetDAIBBHKHIDD() *LHJIJNDBJLL {
	if x, ok := x.GetAction().(*RogueAction_DAIBBHKHIDD); ok {
		return x.DAIBBHKHIDD
	}
	return nil
}

func (x *RogueAction) GetMiracleSelectInfo() *RogueMiracleSelectInfo {
	if x, ok := x.GetAction().(*RogueAction_MiracleSelectInfo); ok {
		return x.MiracleSelectInfo
	}
	return nil
}

func (x *RogueAction) GetFJLKOPAEKNF() *BLPLKIBHIOK {
	if x, ok := x.GetAction().(*RogueAction_FJLKOPAEKNF); ok {
		return x.FJLKOPAEKNF
	}
	return nil
}

func (x *RogueAction) GetGAHIEDCAFDI() *GBHDGGDNLON {
	if x, ok := x.GetAction().(*RogueAction_GAHIEDCAFDI); ok {
		return x.GAHIEDCAFDI
	}
	return nil
}

func (x *RogueAction) GetPEKPONIMHBI() *BBDKCCJFPBE {
	if x, ok := x.GetAction().(*RogueAction_PEKPONIMHBI); ok {
		return x.PEKPONIMHBI
	}
	return nil
}

func (x *RogueAction) GetAGPAICOJMNO() *MGPNFKHLCPI {
	if x, ok := x.GetAction().(*RogueAction_AGPAICOJMNO); ok {
		return x.AGPAICOJMNO
	}
	return nil
}

func (x *RogueAction) GetLDPABLAJIOC() *OJNHHGMEFGN {
	if x, ok := x.GetAction().(*RogueAction_LDPABLAJIOC); ok {
		return x.LDPABLAJIOC
	}
	return nil
}

func (x *RogueAction) GetBANALKDGPGA() *DDBDNLHNOLE {
	if x, ok := x.GetAction().(*RogueAction_BANALKDGPGA); ok {
		return x.BANALKDGPGA
	}
	return nil
}

func (x *RogueAction) GetBCLNDBJGNDD() *JLAOEKNGJOC {
	if x, ok := x.GetAction().(*RogueAction_BCLNDBJGNDD); ok {
		return x.BCLNDBJGNDD
	}
	return nil
}

func (x *RogueAction) GetBonusSelectInfo() *RogueBonusSelectInfo {
	if x, ok := x.GetAction().(*RogueAction_BonusSelectInfo); ok {
		return x.BonusSelectInfo
	}
	return nil
}

func (x *RogueAction) GetRogueFormulaSelectInfo() *RogueFormulaSelectInfo {
	if x, ok := x.GetAction().(*RogueAction_RogueFormulaSelectInfo); ok {
		return x.RogueFormulaSelectInfo
	}
	return nil
}

func (x *RogueAction) GetJENLEOBILLP() *DOOGHJMKIEA {
	if x, ok := x.GetAction().(*RogueAction_JENLEOBILLP); ok {
		return x.JENLEOBILLP
	}
	return nil
}

func (x *RogueAction) GetLDPNACAKCNO() *PGPCMNCMPIN {
	if x, ok := x.GetAction().(*RogueAction_LDPNACAKCNO); ok {
		return x.LDPNACAKCNO
	}
	return nil
}

type isRogueAction_Action interface {
	isRogueAction_Action()
}

type RogueAction_BuffSelectInfo struct {
	BuffSelectInfo *RogueCommonBuffSelectInfo `protobuf:"bytes,1903,opt,name=buff_select_info,json=buffSelectInfo,proto3,oneof"`
}

type RogueAction_DPFCKAFMMIN struct {
	DPFCKAFMMIN *JGLOGGKPEIP `protobuf:"bytes,207,opt,name=DPFCKAFMMIN,proto3,oneof"`
}

type RogueAction_CACBBPGPBKH struct {
	CACBBPGPBKH *MMGFIJKGEJD `protobuf:"bytes,1070,opt,name=CACBBPGPBKH,proto3,oneof"`
}

type RogueAction_DAIBBHKHIDD struct {
	DAIBBHKHIDD *LHJIJNDBJLL `protobuf:"bytes,455,opt,name=DAIBBHKHIDD,proto3,oneof"`
}

type RogueAction_MiracleSelectInfo struct {
	MiracleSelectInfo *RogueMiracleSelectInfo `protobuf:"bytes,338,opt,name=miracle_select_info,json=miracleSelectInfo,proto3,oneof"`
}

type RogueAction_FJLKOPAEKNF struct {
	FJLKOPAEKNF *BLPLKIBHIOK `protobuf:"bytes,1035,opt,name=FJLKOPAEKNF,proto3,oneof"`
}

type RogueAction_GAHIEDCAFDI struct {
	GAHIEDCAFDI *GBHDGGDNLON `protobuf:"bytes,939,opt,name=GAHIEDCAFDI,proto3,oneof"`
}

type RogueAction_PEKPONIMHBI struct {
	PEKPONIMHBI *BBDKCCJFPBE `protobuf:"bytes,899,opt,name=PEKPONIMHBI,proto3,oneof"`
}

type RogueAction_AGPAICOJMNO struct {
	AGPAICOJMNO *MGPNFKHLCPI `protobuf:"bytes,1548,opt,name=AGPAICOJMNO,proto3,oneof"`
}

type RogueAction_LDPABLAJIOC struct {
	LDPABLAJIOC *OJNHHGMEFGN `protobuf:"bytes,147,opt,name=LDPABLAJIOC,proto3,oneof"`
}

type RogueAction_BANALKDGPGA struct {
	BANALKDGPGA *DDBDNLHNOLE `protobuf:"bytes,513,opt,name=BANALKDGPGA,proto3,oneof"`
}

type RogueAction_BCLNDBJGNDD struct {
	BCLNDBJGNDD *JLAOEKNGJOC `protobuf:"bytes,353,opt,name=BCLNDBJGNDD,proto3,oneof"`
}

type RogueAction_BonusSelectInfo struct {
	BonusSelectInfo *RogueBonusSelectInfo `protobuf:"bytes,1601,opt,name=bonus_select_info,json=bonusSelectInfo,proto3,oneof"`
}

type RogueAction_RogueFormulaSelectInfo struct {
	RogueFormulaSelectInfo *RogueFormulaSelectInfo `protobuf:"bytes,1335,opt,name=rogue_formula_select_info,json=rogueFormulaSelectInfo,proto3,oneof"`
}

type RogueAction_JENLEOBILLP struct {
	JENLEOBILLP *DOOGHJMKIEA `protobuf:"bytes,114,opt,name=JENLEOBILLP,proto3,oneof"`
}

type RogueAction_LDPNACAKCNO struct {
	LDPNACAKCNO *PGPCMNCMPIN `protobuf:"bytes,1752,opt,name=LDPNACAKCNO,proto3,oneof"`
}

func (*RogueAction_BuffSelectInfo) isRogueAction_Action() {}

func (*RogueAction_DPFCKAFMMIN) isRogueAction_Action() {}

func (*RogueAction_CACBBPGPBKH) isRogueAction_Action() {}

func (*RogueAction_DAIBBHKHIDD) isRogueAction_Action() {}

func (*RogueAction_MiracleSelectInfo) isRogueAction_Action() {}

func (*RogueAction_FJLKOPAEKNF) isRogueAction_Action() {}

func (*RogueAction_GAHIEDCAFDI) isRogueAction_Action() {}

func (*RogueAction_PEKPONIMHBI) isRogueAction_Action() {}

func (*RogueAction_AGPAICOJMNO) isRogueAction_Action() {}

func (*RogueAction_LDPABLAJIOC) isRogueAction_Action() {}

func (*RogueAction_BANALKDGPGA) isRogueAction_Action() {}

func (*RogueAction_BCLNDBJGNDD) isRogueAction_Action() {}

func (*RogueAction_BonusSelectInfo) isRogueAction_Action() {}

func (*RogueAction_RogueFormulaSelectInfo) isRogueAction_Action() {}

func (*RogueAction_JENLEOBILLP) isRogueAction_Action() {}

func (*RogueAction_LDPNACAKCNO) isRogueAction_Action() {}

var File_RogueAction_proto protoreflect.FileDescriptor

var file_RogueAction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f, 0x4a, 0x4e, 0x48, 0x48, 0x47, 0x4d, 0x45, 0x46, 0x47, 0x4e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x44, 0x4f, 0x4f, 0x47, 0x48, 0x4a, 0x4d,
	0x4b, 0x49, 0x45, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x47, 0x50, 0x4e,
	0x46, 0x4b, 0x48, 0x4c, 0x43, 0x50, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50,
	0x47, 0x50, 0x43, 0x4d, 0x4e, 0x43, 0x4d, 0x50, 0x49, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x4d, 0x4d, 0x47, 0x46, 0x49, 0x4a, 0x4b, 0x47, 0x45, 0x4a, 0x44, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x42, 0x42, 0x44, 0x4b, 0x43, 0x43, 0x4a, 0x46, 0x50, 0x42, 0x45, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a, 0x4c, 0x41, 0x4f, 0x45, 0x4b, 0x4e, 0x47, 0x4a, 0x4f,
	0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x44, 0x44, 0x42, 0x44, 0x4e, 0x4c, 0x48,
	0x4e, 0x4f, 0x4c, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x47, 0x42, 0x48, 0x44, 0x47, 0x47, 0x44, 0x4e,
	0x4c, 0x4f, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x4c, 0x50, 0x4c, 0x4b, 0x49, 0x42,
	0x48, 0x49, 0x4f, 0x4b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4c, 0x48, 0x4a, 0x49,
	0x4a, 0x4e, 0x44, 0x42, 0x4a, 0x4c, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a,
	0x47, 0x4c, 0x4f, 0x47, 0x47, 0x4b, 0x50, 0x45, 0x49, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xac, 0x07, 0x0a, 0x0b, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x47, 0x0a, 0x10, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xef, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x75, 0x66, 0x66, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0b, 0x44, 0x50, 0x46,
	0x43, 0x4b, 0x41, 0x46, 0x4d, 0x4d, 0x49, 0x4e, 0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x4a, 0x47, 0x4c, 0x4f, 0x47, 0x47, 0x4b, 0x50, 0x45, 0x49, 0x50, 0x48, 0x00, 0x52,
	0x0b, 0x44, 0x50, 0x46, 0x43, 0x4b, 0x41, 0x46, 0x4d, 0x4d, 0x49, 0x4e, 0x12, 0x31, 0x0a, 0x0b,
	0x43, 0x41, 0x43, 0x42, 0x42, 0x50, 0x47, 0x50, 0x42, 0x4b, 0x48, 0x18, 0xae, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x4d, 0x47, 0x46, 0x49, 0x4a, 0x4b, 0x47, 0x45, 0x4a, 0x44,
	0x48, 0x00, 0x52, 0x0b, 0x43, 0x41, 0x43, 0x42, 0x42, 0x50, 0x47, 0x50, 0x42, 0x4b, 0x48, 0x12,
	0x31, 0x0a, 0x0b, 0x44, 0x41, 0x49, 0x42, 0x42, 0x48, 0x4b, 0x48, 0x49, 0x44, 0x44, 0x18, 0xc7,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x48, 0x4a, 0x49, 0x4a, 0x4e, 0x44, 0x42,
	0x4a, 0x4c, 0x4c, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x41, 0x49, 0x42, 0x42, 0x48, 0x4b, 0x48, 0x49,
	0x44, 0x44, 0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd2, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x69, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31,
	0x0a, 0x0b, 0x46, 0x4a, 0x4c, 0x4b, 0x4f, 0x50, 0x41, 0x45, 0x4b, 0x4e, 0x46, 0x18, 0x8b, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x4c, 0x50, 0x4c, 0x4b, 0x49, 0x42, 0x48, 0x49,
	0x4f, 0x4b, 0x48, 0x00, 0x52, 0x0b, 0x46, 0x4a, 0x4c, 0x4b, 0x4f, 0x50, 0x41, 0x45, 0x4b, 0x4e,
	0x46, 0x12, 0x31, 0x0a, 0x0b, 0x47, 0x41, 0x48, 0x49, 0x45, 0x44, 0x43, 0x41, 0x46, 0x44, 0x49,
	0x18, 0xab, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x42, 0x48, 0x44, 0x47, 0x47,
	0x44, 0x4e, 0x4c, 0x4f, 0x4e, 0x48, 0x00, 0x52, 0x0b, 0x47, 0x41, 0x48, 0x49, 0x45, 0x44, 0x43,
	0x41, 0x46, 0x44, 0x49, 0x12, 0x31, 0x0a, 0x0b, 0x50, 0x45, 0x4b, 0x50, 0x4f, 0x4e, 0x49, 0x4d,
	0x48, 0x42, 0x49, 0x18, 0x83, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x42, 0x44,
	0x4b, 0x43, 0x43, 0x4a, 0x46, 0x50, 0x42, 0x45, 0x48, 0x00, 0x52, 0x0b, 0x50, 0x45, 0x4b, 0x50,
	0x4f, 0x4e, 0x49, 0x4d, 0x48, 0x42, 0x49, 0x12, 0x31, 0x0a, 0x0b, 0x41, 0x47, 0x50, 0x41, 0x49,
	0x43, 0x4f, 0x4a, 0x4d, 0x4e, 0x4f, 0x18, 0x8c, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4d, 0x47, 0x50, 0x4e, 0x46, 0x4b, 0x48, 0x4c, 0x43, 0x50, 0x49, 0x48, 0x00, 0x52, 0x0b, 0x41,
	0x47, 0x50, 0x41, 0x49, 0x43, 0x4f, 0x4a, 0x4d, 0x4e, 0x4f, 0x12, 0x31, 0x0a, 0x0b, 0x4c, 0x44,
	0x50, 0x41, 0x42, 0x4c, 0x41, 0x4a, 0x49, 0x4f, 0x43, 0x18, 0x93, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4f, 0x4a, 0x4e, 0x48, 0x48, 0x47, 0x4d, 0x45, 0x46, 0x47, 0x4e, 0x48, 0x00,
	0x52, 0x0b, 0x4c, 0x44, 0x50, 0x41, 0x42, 0x4c, 0x41, 0x4a, 0x49, 0x4f, 0x43, 0x12, 0x31, 0x0a,
	0x0b, 0x42, 0x41, 0x4e, 0x41, 0x4c, 0x4b, 0x44, 0x47, 0x50, 0x47, 0x41, 0x18, 0x81, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x44, 0x42, 0x44, 0x4e, 0x4c, 0x48, 0x4e, 0x4f, 0x4c,
	0x45, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x41, 0x4e, 0x41, 0x4c, 0x4b, 0x44, 0x47, 0x50, 0x47, 0x41,
	0x12, 0x31, 0x0a, 0x0b, 0x42, 0x43, 0x4c, 0x4e, 0x44, 0x42, 0x4a, 0x47, 0x4e, 0x44, 0x44, 0x18,
	0xe1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x4c, 0x41, 0x4f, 0x45, 0x4b, 0x4e,
	0x47, 0x4a, 0x4f, 0x43, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x43, 0x4c, 0x4e, 0x44, 0x42, 0x4a, 0x47,
	0x4e, 0x44, 0x44, 0x12, 0x44, 0x0a, 0x11, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc1, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x19, 0x72, 0x6f, 0x67,
	0x75, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb7, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x16, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x30, 0x0a, 0x0b, 0x4a, 0x45, 0x4e, 0x4c, 0x45, 0x4f, 0x42, 0x49, 0x4c, 0x4c, 0x50, 0x18,
	0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x4f, 0x4f, 0x47, 0x48, 0x4a, 0x4d, 0x4b,
	0x49, 0x45, 0x41, 0x48, 0x00, 0x52, 0x0b, 0x4a, 0x45, 0x4e, 0x4c, 0x45, 0x4f, 0x42, 0x49, 0x4c,
	0x4c, 0x50, 0x12, 0x31, 0x0a, 0x0b, 0x4c, 0x44, 0x50, 0x4e, 0x41, 0x43, 0x41, 0x4b, 0x43, 0x4e,
	0x4f, 0x18, 0xd8, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x47, 0x50, 0x43, 0x4d,
	0x4e, 0x43, 0x4d, 0x50, 0x49, 0x4e, 0x48, 0x00, 0x52, 0x0b, 0x4c, 0x44, 0x50, 0x4e, 0x41, 0x43,
	0x41, 0x4b, 0x43, 0x4e, 0x4f, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68,
	0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_RogueAction_proto_rawDescOnce sync.Once
	file_RogueAction_proto_rawDescData = file_RogueAction_proto_rawDesc
)

func file_RogueAction_proto_rawDescGZIP() []byte {
	file_RogueAction_proto_rawDescOnce.Do(func() {
		file_RogueAction_proto_rawDescData = protoimpl.X.CompressGZIP(file_RogueAction_proto_rawDescData)
	})
	return file_RogueAction_proto_rawDescData
}

var file_RogueAction_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_RogueAction_proto_goTypes = []interface{}{
	(*RogueAction)(nil),               // 0: RogueAction
	(*RogueCommonBuffSelectInfo)(nil), // 1: RogueCommonBuffSelectInfo
	(*JGLOGGKPEIP)(nil),               // 2: JGLOGGKPEIP
	(*MMGFIJKGEJD)(nil),               // 3: MMGFIJKGEJD
	(*LHJIJNDBJLL)(nil),               // 4: LHJIJNDBJLL
	(*RogueMiracleSelectInfo)(nil),    // 5: RogueMiracleSelectInfo
	(*BLPLKIBHIOK)(nil),               // 6: BLPLKIBHIOK
	(*GBHDGGDNLON)(nil),               // 7: GBHDGGDNLON
	(*BBDKCCJFPBE)(nil),               // 8: BBDKCCJFPBE
	(*MGPNFKHLCPI)(nil),               // 9: MGPNFKHLCPI
	(*OJNHHGMEFGN)(nil),               // 10: OJNHHGMEFGN
	(*DDBDNLHNOLE)(nil),               // 11: DDBDNLHNOLE
	(*JLAOEKNGJOC)(nil),               // 12: JLAOEKNGJOC
	(*RogueBonusSelectInfo)(nil),      // 13: RogueBonusSelectInfo
	(*RogueFormulaSelectInfo)(nil),    // 14: RogueFormulaSelectInfo
	(*DOOGHJMKIEA)(nil),               // 15: DOOGHJMKIEA
	(*PGPCMNCMPIN)(nil),               // 16: PGPCMNCMPIN
}
var file_RogueAction_proto_depIdxs = []int32{
	1,  // 0: RogueAction.buff_select_info:type_name -> RogueCommonBuffSelectInfo
	2,  // 1: RogueAction.DPFCKAFMMIN:type_name -> JGLOGGKPEIP
	3,  // 2: RogueAction.CACBBPGPBKH:type_name -> MMGFIJKGEJD
	4,  // 3: RogueAction.DAIBBHKHIDD:type_name -> LHJIJNDBJLL
	5,  // 4: RogueAction.miracle_select_info:type_name -> RogueMiracleSelectInfo
	6,  // 5: RogueAction.FJLKOPAEKNF:type_name -> BLPLKIBHIOK
	7,  // 6: RogueAction.GAHIEDCAFDI:type_name -> GBHDGGDNLON
	8,  // 7: RogueAction.PEKPONIMHBI:type_name -> BBDKCCJFPBE
	9,  // 8: RogueAction.AGPAICOJMNO:type_name -> MGPNFKHLCPI
	10, // 9: RogueAction.LDPABLAJIOC:type_name -> OJNHHGMEFGN
	11, // 10: RogueAction.BANALKDGPGA:type_name -> DDBDNLHNOLE
	12, // 11: RogueAction.BCLNDBJGNDD:type_name -> JLAOEKNGJOC
	13, // 12: RogueAction.bonus_select_info:type_name -> RogueBonusSelectInfo
	14, // 13: RogueAction.rogue_formula_select_info:type_name -> RogueFormulaSelectInfo
	15, // 14: RogueAction.JENLEOBILLP:type_name -> DOOGHJMKIEA
	16, // 15: RogueAction.LDPNACAKCNO:type_name -> PGPCMNCMPIN
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_RogueAction_proto_init() }
func file_RogueAction_proto_init() {
	if File_RogueAction_proto != nil {
		return
	}
	file_OJNHHGMEFGN_proto_init()
	file_RogueCommonBuffSelectInfo_proto_init()
	file_DOOGHJMKIEA_proto_init()
	file_MGPNFKHLCPI_proto_init()
	file_PGPCMNCMPIN_proto_init()
	file_MMGFIJKGEJD_proto_init()
	file_RogueMiracleSelectInfo_proto_init()
	file_BBDKCCJFPBE_proto_init()
	file_JLAOEKNGJOC_proto_init()
	file_DDBDNLHNOLE_proto_init()
	file_RogueBonusSelectInfo_proto_init()
	file_GBHDGGDNLON_proto_init()
	file_RogueFormulaSelectInfo_proto_init()
	file_BLPLKIBHIOK_proto_init()
	file_LHJIJNDBJLL_proto_init()
	file_JGLOGGKPEIP_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_RogueAction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RogueAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_RogueAction_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RogueAction_BuffSelectInfo)(nil),
		(*RogueAction_DPFCKAFMMIN)(nil),
		(*RogueAction_CACBBPGPBKH)(nil),
		(*RogueAction_DAIBBHKHIDD)(nil),
		(*RogueAction_MiracleSelectInfo)(nil),
		(*RogueAction_FJLKOPAEKNF)(nil),
		(*RogueAction_GAHIEDCAFDI)(nil),
		(*RogueAction_PEKPONIMHBI)(nil),
		(*RogueAction_AGPAICOJMNO)(nil),
		(*RogueAction_LDPABLAJIOC)(nil),
		(*RogueAction_BANALKDGPGA)(nil),
		(*RogueAction_BCLNDBJGNDD)(nil),
		(*RogueAction_BonusSelectInfo)(nil),
		(*RogueAction_RogueFormulaSelectInfo)(nil),
		(*RogueAction_JENLEOBILLP)(nil),
		(*RogueAction_LDPNACAKCNO)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RogueAction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RogueAction_proto_goTypes,
		DependencyIndexes: file_RogueAction_proto_depIdxs,
		MessageInfos:      file_RogueAction_proto_msgTypes,
	}.Build()
	File_RogueAction_proto = out.File
	file_RogueAction_proto_rawDesc = nil
	file_RogueAction_proto_goTypes = nil
	file_RogueAction_proto_depIdxs = nil
}
