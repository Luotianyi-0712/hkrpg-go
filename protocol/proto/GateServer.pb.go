// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: GateServer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GateServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	APAGJKDJGEP     bool     `protobuf:"varint,1566,opt,name=APAGJKDJGEP,proto3" json:"APAGJKDJGEP,omitempty"`
	KKAFGPEKDCB     bool     `protobuf:"varint,1952,opt,name=KKAFGPEKDCB,proto3" json:"KKAFGPEKDCB,omitempty"`
	GBICAMFDFCE     string   `protobuf:"bytes,563,opt,name=GBICAMFDFCE,proto3" json:"GBICAMFDFCE,omitempty"`
	RegionName      string   `protobuf:"bytes,5,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	Unk7            bool     `protobuf:"varint,1457,opt,name=unk7,proto3" json:"unk7,omitempty"`
	OAONLAKKNIH     string   `protobuf:"bytes,716,opt,name=OAONLAKKNIH,proto3" json:"OAONLAKKNIH,omitempty"`
	LLBOPDMGMLO     string   `protobuf:"bytes,1220,opt,name=LLBOPDMGMLO,proto3" json:"LLBOPDMGMLO,omitempty"`
	DEGFPDPOIHI     string   `protobuf:"bytes,1192,opt,name=DEGFPDPOIHI,proto3" json:"DEGFPDPOIHI,omitempty"`
	KICPPAHLGHB     int64    `protobuf:"varint,15,opt,name=KICPPAHLGHB,proto3" json:"KICPPAHLGHB,omitempty"`
	Unk5            bool     `protobuf:"varint,593,opt,name=unk5,proto3" json:"unk5,omitempty"`
	ExResourceUrl   string   `protobuf:"bytes,14,opt,name=ex_resource_url,json=exResourceUrl,proto3" json:"ex_resource_url,omitempty"`
	FPHFAJBCHPG     string   `protobuf:"bytes,677,opt,name=FPHFAJBCHPG,proto3" json:"FPHFAJBCHPG,omitempty"`
	BHDBHBJJPNI     string   `protobuf:"bytes,405,opt,name=BHDBHBJJPNI,proto3" json:"BHDBHBJJPNI,omitempty"`
	IfixUrl         string   `protobuf:"bytes,1113,opt,name=ifix_url,json=ifixUrl,proto3" json:"ifix_url,omitempty"`
	PNHBALGFHOH     string   `protobuf:"bytes,87,opt,name=PNHBALGFHOH,proto3" json:"PNHBALGFHOH,omitempty"`
	ClientSecretKey string   `protobuf:"bytes,1808,opt,name=client_secret_key,json=clientSecretKey,proto3" json:"client_secret_key,omitempty"`
	Port            uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	NDAOKPKOLKI     string   `protobuf:"bytes,1570,opt,name=NDAOKPKOLKI,proto3" json:"NDAOKPKOLKI,omitempty"`
	OPKPHGMFICB     bool     `protobuf:"varint,1915,opt,name=OPKPHGMFICB,proto3" json:"OPKPHGMFICB,omitempty"`
	OHOGINOGEOG     string   `protobuf:"bytes,1629,opt,name=OHOGINOGEOG,proto3" json:"OHOGINOGEOG,omitempty"`
	IfixVersion     string   `protobuf:"bytes,1583,opt,name=ifix_version,json=ifixVersion,proto3" json:"ifix_version,omitempty"`
	AOMEDACHLJD     uint32   `protobuf:"varint,13,opt,name=AOMEDACHLJD,proto3" json:"AOMEDACHLJD,omitempty"`
	Unk1            bool     `protobuf:"varint,1,opt,name=unk1,proto3" json:"unk1,omitempty"`
	FNCHMFHFMID     string   `protobuf:"bytes,8,opt,name=FNCHMFHFMID,proto3" json:"FNCHMFHFMID,omitempty"`
	Msg             string   `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
	KEICDBEHMDO     string   `protobuf:"bytes,915,opt,name=KEICDBEHMDO,proto3" json:"KEICDBEHMDO,omitempty"`
	AssetBundleUrl  string   `protobuf:"bytes,3,opt,name=asset_bundle_url,json=assetBundleUrl,proto3" json:"asset_bundle_url,omitempty"`
	LBAAIACEFCD     bool     `protobuf:"varint,1028,opt,name=LBAAIACEFCD,proto3" json:"LBAAIACEFCD,omitempty"`
	GBCBIDAHGJC     []string `protobuf:"bytes,663,rep,name=GBCBIDAHGJC,proto3" json:"GBCBIDAHGJC,omitempty"`
	MdkResVersion   string   `protobuf:"bytes,661,opt,name=mdk_res_version,json=mdkResVersion,proto3" json:"mdk_res_version,omitempty"`
	JCFGJFMGNLF     string   `protobuf:"bytes,1462,opt,name=JCFGJFMGNLF,proto3" json:"JCFGJFMGNLF,omitempty"`
	BCADOJCHKAE     string   `protobuf:"bytes,1236,opt,name=BCADOJCHKAE,proto3" json:"BCADOJCHKAE,omitempty"`
	GMCEHMDOHDL     string   `protobuf:"bytes,1773,opt,name=GMCEHMDOHDL,proto3" json:"GMCEHMDOHDL,omitempty"`
	POHJHDDOECN     int64    `protobuf:"varint,9,opt,name=POHJHDDOECN,proto3" json:"POHJHDDOECN,omitempty"`
	Unk3            bool     `protobuf:"varint,297,opt,name=unk3,proto3" json:"unk3,omitempty"`
	NCIKDCIIGOF     bool     `protobuf:"varint,1754,opt,name=NCIKDCIIGOF,proto3" json:"NCIKDCIIGOF,omitempty"`
	IHGAICFNADN     string   `protobuf:"bytes,1132,opt,name=IHGAICFNADN,proto3" json:"IHGAICFNADN,omitempty"`
	Retcode         uint32   `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
	NPNBJBCFPNE     string   `protobuf:"bytes,148,opt,name=NPNBJBCFPNE,proto3" json:"NPNBJBCFPNE,omitempty"`
	BAGLOFEACNC     uint32   `protobuf:"varint,6,opt,name=BAGLOFEACNC,proto3" json:"BAGLOFEACNC,omitempty"`
	GDOBHNDOCOJ     string   `protobuf:"bytes,614,opt,name=GDOBHNDOCOJ,proto3" json:"GDOBHNDOCOJ,omitempty"`
	Ip              string   `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	EFKNBDLNAKJ     bool     `protobuf:"varint,1486,opt,name=EFKNBDLNAKJ,proto3" json:"EFKNBDLNAKJ,omitempty"`
	Unk4            bool     `protobuf:"varint,414,opt,name=unk4,proto3" json:"unk4,omitempty"`
	LuaUrl          string   `protobuf:"bytes,10,opt,name=lua_url,json=luaUrl,proto3" json:"lua_url,omitempty"`
	GHCIOIALPMH     string   `protobuf:"bytes,1012,opt,name=GHCIOIALPMH,proto3" json:"GHCIOIALPMH,omitempty"`
	Unk6            bool     `protobuf:"varint,1176,opt,name=unk6,proto3" json:"unk6,omitempty"`
	MDAILCAMOAO     uint32   `protobuf:"varint,1710,opt,name=MDAILCAMOAO,proto3" json:"MDAILCAMOAO,omitempty"`
	HABFAOFIPLA     string   `protobuf:"bytes,1430,opt,name=HABFAOFIPLA,proto3" json:"HABFAOFIPLA,omitempty"`
	MNEMHHBMKEA     string   `protobuf:"bytes,1370,opt,name=MNEMHHBMKEA,proto3" json:"MNEMHHBMKEA,omitempty"`
	MANDMJOLPHH     string   `protobuf:"bytes,873,opt,name=MANDMJOLPHH,proto3" json:"MANDMJOLPHH,omitempty"`
	PPHBPGBNOEM     bool     `protobuf:"varint,1523,opt,name=PPHBPGBNOEM,proto3" json:"PPHBPGBNOEM,omitempty"`
	LBPFHPCBCKL     string   `protobuf:"bytes,512,opt,name=LBPFHPCBCKL,proto3" json:"LBPFHPCBCKL,omitempty"`
	BFIHFKLMMEK     string   `protobuf:"bytes,312,opt,name=BFIHFKLMMEK,proto3" json:"BFIHFKLMMEK,omitempty"`
	Unk2            bool     `protobuf:"varint,7,opt,name=unk2,proto3" json:"unk2,omitempty"`
	ENLGGEEKCJH     string   `protobuf:"bytes,1420,opt,name=ENLGGEEKCJH,proto3" json:"ENLGGEEKCJH,omitempty"`
	MEACAGAFHGA     string   `protobuf:"bytes,571,opt,name=MEACAGAFHGA,proto3" json:"MEACAGAFHGA,omitempty"`
	JIDBDEKOHDH     bool     `protobuf:"varint,825,opt,name=JIDBDEKOHDH,proto3" json:"JIDBDEKOHDH,omitempty"`
	PKDDCFGDDDE     string   `protobuf:"bytes,1750,opt,name=PKDDCFGDDDE,proto3" json:"PKDDCFGDDDE,omitempty"`
}

func (x *GateServer) Reset() {
	*x = GateServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GateServer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateServer) ProtoMessage() {}

func (x *GateServer) ProtoReflect() protoreflect.Message {
	mi := &file_GateServer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateServer.ProtoReflect.Descriptor instead.
func (*GateServer) Descriptor() ([]byte, []int) {
	return file_GateServer_proto_rawDescGZIP(), []int{0}
}

func (x *GateServer) GetAPAGJKDJGEP() bool {
	if x != nil {
		return x.APAGJKDJGEP
	}
	return false
}

func (x *GateServer) GetKKAFGPEKDCB() bool {
	if x != nil {
		return x.KKAFGPEKDCB
	}
	return false
}

func (x *GateServer) GetGBICAMFDFCE() string {
	if x != nil {
		return x.GBICAMFDFCE
	}
	return ""
}

func (x *GateServer) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *GateServer) GetUnk7() bool {
	if x != nil {
		return x.Unk7
	}
	return false
}

func (x *GateServer) GetOAONLAKKNIH() string {
	if x != nil {
		return x.OAONLAKKNIH
	}
	return ""
}

func (x *GateServer) GetLLBOPDMGMLO() string {
	if x != nil {
		return x.LLBOPDMGMLO
	}
	return ""
}

func (x *GateServer) GetDEGFPDPOIHI() string {
	if x != nil {
		return x.DEGFPDPOIHI
	}
	return ""
}

func (x *GateServer) GetKICPPAHLGHB() int64 {
	if x != nil {
		return x.KICPPAHLGHB
	}
	return 0
}

func (x *GateServer) GetUnk5() bool {
	if x != nil {
		return x.Unk5
	}
	return false
}

func (x *GateServer) GetExResourceUrl() string {
	if x != nil {
		return x.ExResourceUrl
	}
	return ""
}

func (x *GateServer) GetFPHFAJBCHPG() string {
	if x != nil {
		return x.FPHFAJBCHPG
	}
	return ""
}

func (x *GateServer) GetBHDBHBJJPNI() string {
	if x != nil {
		return x.BHDBHBJJPNI
	}
	return ""
}

func (x *GateServer) GetIfixUrl() string {
	if x != nil {
		return x.IfixUrl
	}
	return ""
}

func (x *GateServer) GetPNHBALGFHOH() string {
	if x != nil {
		return x.PNHBALGFHOH
	}
	return ""
}

func (x *GateServer) GetClientSecretKey() string {
	if x != nil {
		return x.ClientSecretKey
	}
	return ""
}

func (x *GateServer) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GateServer) GetNDAOKPKOLKI() string {
	if x != nil {
		return x.NDAOKPKOLKI
	}
	return ""
}

func (x *GateServer) GetOPKPHGMFICB() bool {
	if x != nil {
		return x.OPKPHGMFICB
	}
	return false
}

func (x *GateServer) GetOHOGINOGEOG() string {
	if x != nil {
		return x.OHOGINOGEOG
	}
	return ""
}

func (x *GateServer) GetIfixVersion() string {
	if x != nil {
		return x.IfixVersion
	}
	return ""
}

func (x *GateServer) GetAOMEDACHLJD() uint32 {
	if x != nil {
		return x.AOMEDACHLJD
	}
	return 0
}

func (x *GateServer) GetUnk1() bool {
	if x != nil {
		return x.Unk1
	}
	return false
}

func (x *GateServer) GetFNCHMFHFMID() string {
	if x != nil {
		return x.FNCHMFHFMID
	}
	return ""
}

func (x *GateServer) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GateServer) GetKEICDBEHMDO() string {
	if x != nil {
		return x.KEICDBEHMDO
	}
	return ""
}

func (x *GateServer) GetAssetBundleUrl() string {
	if x != nil {
		return x.AssetBundleUrl
	}
	return ""
}

func (x *GateServer) GetLBAAIACEFCD() bool {
	if x != nil {
		return x.LBAAIACEFCD
	}
	return false
}

func (x *GateServer) GetGBCBIDAHGJC() []string {
	if x != nil {
		return x.GBCBIDAHGJC
	}
	return nil
}

func (x *GateServer) GetMdkResVersion() string {
	if x != nil {
		return x.MdkResVersion
	}
	return ""
}

func (x *GateServer) GetJCFGJFMGNLF() string {
	if x != nil {
		return x.JCFGJFMGNLF
	}
	return ""
}

func (x *GateServer) GetBCADOJCHKAE() string {
	if x != nil {
		return x.BCADOJCHKAE
	}
	return ""
}

func (x *GateServer) GetGMCEHMDOHDL() string {
	if x != nil {
		return x.GMCEHMDOHDL
	}
	return ""
}

func (x *GateServer) GetPOHJHDDOECN() int64 {
	if x != nil {
		return x.POHJHDDOECN
	}
	return 0
}

func (x *GateServer) GetUnk3() bool {
	if x != nil {
		return x.Unk3
	}
	return false
}

func (x *GateServer) GetNCIKDCIIGOF() bool {
	if x != nil {
		return x.NCIKDCIIGOF
	}
	return false
}

func (x *GateServer) GetIHGAICFNADN() string {
	if x != nil {
		return x.IHGAICFNADN
	}
	return ""
}

func (x *GateServer) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GateServer) GetNPNBJBCFPNE() string {
	if x != nil {
		return x.NPNBJBCFPNE
	}
	return ""
}

func (x *GateServer) GetBAGLOFEACNC() uint32 {
	if x != nil {
		return x.BAGLOFEACNC
	}
	return 0
}

func (x *GateServer) GetGDOBHNDOCOJ() string {
	if x != nil {
		return x.GDOBHNDOCOJ
	}
	return ""
}

func (x *GateServer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GateServer) GetEFKNBDLNAKJ() bool {
	if x != nil {
		return x.EFKNBDLNAKJ
	}
	return false
}

func (x *GateServer) GetUnk4() bool {
	if x != nil {
		return x.Unk4
	}
	return false
}

func (x *GateServer) GetLuaUrl() string {
	if x != nil {
		return x.LuaUrl
	}
	return ""
}

func (x *GateServer) GetGHCIOIALPMH() string {
	if x != nil {
		return x.GHCIOIALPMH
	}
	return ""
}

func (x *GateServer) GetUnk6() bool {
	if x != nil {
		return x.Unk6
	}
	return false
}

func (x *GateServer) GetMDAILCAMOAO() uint32 {
	if x != nil {
		return x.MDAILCAMOAO
	}
	return 0
}

func (x *GateServer) GetHABFAOFIPLA() string {
	if x != nil {
		return x.HABFAOFIPLA
	}
	return ""
}

func (x *GateServer) GetMNEMHHBMKEA() string {
	if x != nil {
		return x.MNEMHHBMKEA
	}
	return ""
}

func (x *GateServer) GetMANDMJOLPHH() string {
	if x != nil {
		return x.MANDMJOLPHH
	}
	return ""
}

func (x *GateServer) GetPPHBPGBNOEM() bool {
	if x != nil {
		return x.PPHBPGBNOEM
	}
	return false
}

func (x *GateServer) GetLBPFHPCBCKL() string {
	if x != nil {
		return x.LBPFHPCBCKL
	}
	return ""
}

func (x *GateServer) GetBFIHFKLMMEK() string {
	if x != nil {
		return x.BFIHFKLMMEK
	}
	return ""
}

func (x *GateServer) GetUnk2() bool {
	if x != nil {
		return x.Unk2
	}
	return false
}

func (x *GateServer) GetENLGGEEKCJH() string {
	if x != nil {
		return x.ENLGGEEKCJH
	}
	return ""
}

func (x *GateServer) GetMEACAGAFHGA() string {
	if x != nil {
		return x.MEACAGAFHGA
	}
	return ""
}

func (x *GateServer) GetJIDBDEKOHDH() bool {
	if x != nil {
		return x.JIDBDEKOHDH
	}
	return false
}

func (x *GateServer) GetPKDDCFGDDDE() string {
	if x != nil {
		return x.PKDDCFGDDDE
	}
	return ""
}

var File_GateServer_proto protoreflect.FileDescriptor

var file_GateServer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x81, 0x0f, 0x0a, 0x0a, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0b, 0x41, 0x50, 0x41, 0x47, 0x4a, 0x4b, 0x44, 0x4a, 0x47, 0x45, 0x50,
	0x18, 0x9e, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x41, 0x50, 0x41, 0x47, 0x4a, 0x4b, 0x44,
	0x4a, 0x47, 0x45, 0x50, 0x12, 0x21, 0x0a, 0x0b, 0x4b, 0x4b, 0x41, 0x46, 0x47, 0x50, 0x45, 0x4b,
	0x44, 0x43, 0x42, 0x18, 0xa0, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4b, 0x4b, 0x41, 0x46,
	0x47, 0x50, 0x45, 0x4b, 0x44, 0x43, 0x42, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x42, 0x49, 0x43, 0x41,
	0x4d, 0x46, 0x44, 0x46, 0x43, 0x45, 0x18, 0xb3, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47,
	0x42, 0x49, 0x43, 0x41, 0x4d, 0x46, 0x44, 0x46, 0x43, 0x45, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x75,
	0x6e, 0x6b, 0x37, 0x18, 0xb1, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b, 0x37,
	0x12, 0x21, 0x0a, 0x0b, 0x4f, 0x41, 0x4f, 0x4e, 0x4c, 0x41, 0x4b, 0x4b, 0x4e, 0x49, 0x48, 0x18,
	0xcc, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x41, 0x4f, 0x4e, 0x4c, 0x41, 0x4b, 0x4b,
	0x4e, 0x49, 0x48, 0x12, 0x21, 0x0a, 0x0b, 0x4c, 0x4c, 0x42, 0x4f, 0x50, 0x44, 0x4d, 0x47, 0x4d,
	0x4c, 0x4f, 0x18, 0xc4, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x4c, 0x42, 0x4f, 0x50,
	0x44, 0x4d, 0x47, 0x4d, 0x4c, 0x4f, 0x12, 0x21, 0x0a, 0x0b, 0x44, 0x45, 0x47, 0x46, 0x50, 0x44,
	0x50, 0x4f, 0x49, 0x48, 0x49, 0x18, 0xa8, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x45,
	0x47, 0x46, 0x50, 0x44, 0x50, 0x4f, 0x49, 0x48, 0x49, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x49, 0x43,
	0x50, 0x50, 0x41, 0x48, 0x4c, 0x47, 0x48, 0x42, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x4b, 0x49, 0x43, 0x50, 0x50, 0x41, 0x48, 0x4c, 0x47, 0x48, 0x42, 0x12, 0x13, 0x0a, 0x04, 0x75,
	0x6e, 0x6b, 0x35, 0x18, 0xd1, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b, 0x35,
	0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x46, 0x50, 0x48, 0x46,
	0x41, 0x4a, 0x42, 0x43, 0x48, 0x50, 0x47, 0x18, 0xa5, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x46, 0x50, 0x48, 0x46, 0x41, 0x4a, 0x42, 0x43, 0x48, 0x50, 0x47, 0x12, 0x21, 0x0a, 0x0b, 0x42,
	0x48, 0x44, 0x42, 0x48, 0x42, 0x4a, 0x4a, 0x50, 0x4e, 0x49, 0x18, 0x95, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x42, 0x48, 0x44, 0x42, 0x48, 0x42, 0x4a, 0x4a, 0x50, 0x4e, 0x49, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x66, 0x69, 0x78, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xd9, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x66, 0x69, 0x78, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x4e,
	0x48, 0x42, 0x41, 0x4c, 0x47, 0x46, 0x48, 0x4f, 0x48, 0x18, 0x57, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x50, 0x4e, 0x48, 0x42, 0x41, 0x4c, 0x47, 0x46, 0x48, 0x4f, 0x48, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x90, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a,
	0x0b, 0x4e, 0x44, 0x41, 0x4f, 0x4b, 0x50, 0x4b, 0x4f, 0x4c, 0x4b, 0x49, 0x18, 0xa2, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x44, 0x41, 0x4f, 0x4b, 0x50, 0x4b, 0x4f, 0x4c, 0x4b, 0x49,
	0x12, 0x21, 0x0a, 0x0b, 0x4f, 0x50, 0x4b, 0x50, 0x48, 0x47, 0x4d, 0x46, 0x49, 0x43, 0x42, 0x18,
	0xfb, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4f, 0x50, 0x4b, 0x50, 0x48, 0x47, 0x4d, 0x46,
	0x49, 0x43, 0x42, 0x12, 0x21, 0x0a, 0x0b, 0x4f, 0x48, 0x4f, 0x47, 0x49, 0x4e, 0x4f, 0x47, 0x45,
	0x4f, 0x47, 0x18, 0xdd, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x48, 0x4f, 0x47, 0x49,
	0x4e, 0x4f, 0x47, 0x45, 0x4f, 0x47, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x66, 0x69, 0x78, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xaf, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x66, 0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x4f,
	0x4d, 0x45, 0x44, 0x41, 0x43, 0x48, 0x4c, 0x4a, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x41, 0x4f, 0x4d, 0x45, 0x44, 0x41, 0x43, 0x48, 0x4c, 0x4a, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x6e, 0x6b, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b, 0x31,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x4e, 0x43, 0x48, 0x4d, 0x46, 0x48, 0x46, 0x4d, 0x49, 0x44, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x4e, 0x43, 0x48, 0x4d, 0x46, 0x48, 0x46, 0x4d,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x4b, 0x45, 0x49, 0x43, 0x44, 0x42, 0x45, 0x48,
	0x4d, 0x44, 0x4f, 0x18, 0x93, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4b, 0x45, 0x49, 0x43,
	0x44, 0x42, 0x45, 0x48, 0x4d, 0x44, 0x4f, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x4c, 0x42, 0x41, 0x41, 0x49, 0x41, 0x43, 0x45, 0x46, 0x43, 0x44,
	0x18, 0x84, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4c, 0x42, 0x41, 0x41, 0x49, 0x41, 0x43,
	0x45, 0x46, 0x43, 0x44, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x42, 0x43, 0x42, 0x49, 0x44, 0x41, 0x48,
	0x47, 0x4a, 0x43, 0x18, 0x97, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x42, 0x43, 0x42,
	0x49, 0x44, 0x41, 0x48, 0x47, 0x4a, 0x43, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x64, 0x6b, 0x5f, 0x72,
	0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x95, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6d, 0x64, 0x6b, 0x52, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0b, 0x4a, 0x43, 0x46, 0x47, 0x4a, 0x46, 0x4d, 0x47, 0x4e, 0x4c, 0x46, 0x18,
	0xb6, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x43, 0x46, 0x47, 0x4a, 0x46, 0x4d, 0x47,
	0x4e, 0x4c, 0x46, 0x12, 0x21, 0x0a, 0x0b, 0x42, 0x43, 0x41, 0x44, 0x4f, 0x4a, 0x43, 0x48, 0x4b,
	0x41, 0x45, 0x18, 0xd4, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x43, 0x41, 0x44, 0x4f,
	0x4a, 0x43, 0x48, 0x4b, 0x41, 0x45, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x4d, 0x43, 0x45, 0x48, 0x4d,
	0x44, 0x4f, 0x48, 0x44, 0x4c, 0x18, 0xed, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x4d,
	0x43, 0x45, 0x48, 0x4d, 0x44, 0x4f, 0x48, 0x44, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x4f, 0x48,
	0x4a, 0x48, 0x44, 0x44, 0x4f, 0x45, 0x43, 0x4e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x50, 0x4f, 0x48, 0x4a, 0x48, 0x44, 0x44, 0x4f, 0x45, 0x43, 0x4e, 0x12, 0x13, 0x0a, 0x04, 0x75,
	0x6e, 0x6b, 0x33, 0x18, 0xa9, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b, 0x33,
	0x12, 0x21, 0x0a, 0x0b, 0x4e, 0x43, 0x49, 0x4b, 0x44, 0x43, 0x49, 0x49, 0x47, 0x4f, 0x46, 0x18,
	0xda, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4e, 0x43, 0x49, 0x4b, 0x44, 0x43, 0x49, 0x49,
	0x47, 0x4f, 0x46, 0x12, 0x21, 0x0a, 0x0b, 0x49, 0x48, 0x47, 0x41, 0x49, 0x43, 0x46, 0x4e, 0x41,
	0x44, 0x4e, 0x18, 0xec, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x48, 0x47, 0x41, 0x49,
	0x43, 0x46, 0x4e, 0x41, 0x44, 0x4e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x4e, 0x50, 0x4e, 0x42, 0x4a, 0x42, 0x43, 0x46, 0x50, 0x4e, 0x45, 0x18,
	0x94, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x50, 0x4e, 0x42, 0x4a, 0x42, 0x43, 0x46,
	0x50, 0x4e, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x41, 0x47, 0x4c, 0x4f, 0x46, 0x45, 0x41, 0x43,
	0x4e, 0x43, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x41, 0x47, 0x4c, 0x4f, 0x46,
	0x45, 0x41, 0x43, 0x4e, 0x43, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x44, 0x4f, 0x42, 0x48, 0x4e, 0x44,
	0x4f, 0x43, 0x4f, 0x4a, 0x18, 0xe6, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x44, 0x4f,
	0x42, 0x48, 0x4e, 0x44, 0x4f, 0x43, 0x4f, 0x4a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0b, 0x45, 0x46, 0x4b, 0x4e,
	0x42, 0x44, 0x4c, 0x4e, 0x41, 0x4b, 0x4a, 0x18, 0xce, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x45, 0x46, 0x4b, 0x4e, 0x42, 0x44, 0x4c, 0x4e, 0x41, 0x4b, 0x4a, 0x12, 0x13, 0x0a, 0x04, 0x75,
	0x6e, 0x6b, 0x34, 0x18, 0x9e, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b, 0x34,
	0x12, 0x17, 0x0a, 0x07, 0x6c, 0x75, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x75, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x48, 0x43,
	0x49, 0x4f, 0x49, 0x41, 0x4c, 0x50, 0x4d, 0x48, 0x18, 0xf4, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x47, 0x48, 0x43, 0x49, 0x4f, 0x49, 0x41, 0x4c, 0x50, 0x4d, 0x48, 0x12, 0x13, 0x0a, 0x04,
	0x75, 0x6e, 0x6b, 0x36, 0x18, 0x98, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b,
	0x36, 0x12, 0x21, 0x0a, 0x0b, 0x4d, 0x44, 0x41, 0x49, 0x4c, 0x43, 0x41, 0x4d, 0x4f, 0x41, 0x4f,
	0x18, 0xae, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4d, 0x44, 0x41, 0x49, 0x4c, 0x43, 0x41,
	0x4d, 0x4f, 0x41, 0x4f, 0x12, 0x21, 0x0a, 0x0b, 0x48, 0x41, 0x42, 0x46, 0x41, 0x4f, 0x46, 0x49,
	0x50, 0x4c, 0x41, 0x18, 0x96, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x48, 0x41, 0x42, 0x46,
	0x41, 0x4f, 0x46, 0x49, 0x50, 0x4c, 0x41, 0x12, 0x21, 0x0a, 0x0b, 0x4d, 0x4e, 0x45, 0x4d, 0x48,
	0x48, 0x42, 0x4d, 0x4b, 0x45, 0x41, 0x18, 0xda, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d,
	0x4e, 0x45, 0x4d, 0x48, 0x48, 0x42, 0x4d, 0x4b, 0x45, 0x41, 0x12, 0x21, 0x0a, 0x0b, 0x4d, 0x41,
	0x4e, 0x44, 0x4d, 0x4a, 0x4f, 0x4c, 0x50, 0x48, 0x48, 0x18, 0xe9, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4d, 0x41, 0x4e, 0x44, 0x4d, 0x4a, 0x4f, 0x4c, 0x50, 0x48, 0x48, 0x12, 0x21, 0x0a,
	0x0b, 0x50, 0x50, 0x48, 0x42, 0x50, 0x47, 0x42, 0x4e, 0x4f, 0x45, 0x4d, 0x18, 0xf3, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x50, 0x48, 0x42, 0x50, 0x47, 0x42, 0x4e, 0x4f, 0x45, 0x4d,
	0x12, 0x21, 0x0a, 0x0b, 0x4c, 0x42, 0x50, 0x46, 0x48, 0x50, 0x43, 0x42, 0x43, 0x4b, 0x4c, 0x18,
	0x80, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x42, 0x50, 0x46, 0x48, 0x50, 0x43, 0x42,
	0x43, 0x4b, 0x4c, 0x12, 0x21, 0x0a, 0x0b, 0x42, 0x46, 0x49, 0x48, 0x46, 0x4b, 0x4c, 0x4d, 0x4d,
	0x45, 0x4b, 0x18, 0xb8, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x46, 0x49, 0x48, 0x46,
	0x4b, 0x4c, 0x4d, 0x4d, 0x45, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x6b, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x75, 0x6e, 0x6b, 0x32, 0x12, 0x21, 0x0a, 0x0b, 0x45, 0x4e,
	0x4c, 0x47, 0x47, 0x45, 0x45, 0x4b, 0x43, 0x4a, 0x48, 0x18, 0x8c, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x45, 0x4e, 0x4c, 0x47, 0x47, 0x45, 0x45, 0x4b, 0x43, 0x4a, 0x48, 0x12, 0x21, 0x0a,
	0x0b, 0x4d, 0x45, 0x41, 0x43, 0x41, 0x47, 0x41, 0x46, 0x48, 0x47, 0x41, 0x18, 0xbb, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x45, 0x41, 0x43, 0x41, 0x47, 0x41, 0x46, 0x48, 0x47, 0x41,
	0x12, 0x21, 0x0a, 0x0b, 0x4a, 0x49, 0x44, 0x42, 0x44, 0x45, 0x4b, 0x4f, 0x48, 0x44, 0x48, 0x18,
	0xb9, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4a, 0x49, 0x44, 0x42, 0x44, 0x45, 0x4b, 0x4f,
	0x48, 0x44, 0x48, 0x12, 0x21, 0x0a, 0x0b, 0x50, 0x4b, 0x44, 0x44, 0x43, 0x46, 0x47, 0x44, 0x44,
	0x44, 0x45, 0x18, 0xd6, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x4b, 0x44, 0x44, 0x43,
	0x46, 0x47, 0x44, 0x44, 0x44, 0x45, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GateServer_proto_rawDescOnce sync.Once
	file_GateServer_proto_rawDescData = file_GateServer_proto_rawDesc
)

func file_GateServer_proto_rawDescGZIP() []byte {
	file_GateServer_proto_rawDescOnce.Do(func() {
		file_GateServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_GateServer_proto_rawDescData)
	})
	return file_GateServer_proto_rawDescData
}

var file_GateServer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GateServer_proto_goTypes = []interface{}{
	(*GateServer)(nil), // 0: GateServer
}
var file_GateServer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_GateServer_proto_init() }
func file_GateServer_proto_init() {
	if File_GateServer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GateServer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GateServer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GateServer_proto_goTypes,
		DependencyIndexes: file_GateServer_proto_depIdxs,
		MessageInfos:      file_GateServer_proto_msgTypes,
	}.Build()
	File_GateServer_proto = out.File
	file_GateServer_proto_rawDesc = nil
	file_GateServer_proto_goTypes = nil
	file_GateServer_proto_depIdxs = nil
}
