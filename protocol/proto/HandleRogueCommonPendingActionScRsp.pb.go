// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: HandleRogueCommonPendingActionScRsp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleRogueCommonPendingActionScRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePosition uint32       `protobuf:"varint,5,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	QueueLocation uint32       `protobuf:"varint,7,opt,name=queue_location,json=queueLocation,proto3" json:"queue_location,omitempty"`
	Retcode       uint32       `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	DGHOFLBPLOM   *OEABNDMNIDN `protobuf:"bytes,689,opt,name=DGHOFLBPLOM,proto3" json:"DGHOFLBPLOM,omitempty"`
	// Types that are assignable to Action:
	//
	//	*HandleRogueCommonPendingActionScRsp_BuffSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_BFEOAJMCIMI
	//	*HandleRogueCommonPendingActionScRsp_PNIHMAAPMIG
	//	*HandleRogueCommonPendingActionScRsp_BuffRerollCallback
	//	*HandleRogueCommonPendingActionScRsp_BCLAIIEKMEK
	//	*HandleRogueCommonPendingActionScRsp_KOIPMHGJJBI
	//	*HandleRogueCommonPendingActionScRsp_GIKHFCFCKMO
	//	*HandleRogueCommonPendingActionScRsp_EPKDBDGBHIC
	//	*HandleRogueCommonPendingActionScRsp_CEHNAAOODDG
	//	*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_DIBJKEBNIPK
	//	*HandleRogueCommonPendingActionScRsp_BonusSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback
	//	*HandleRogueCommonPendingActionScRsp_ONLMPLCMLOG
	//	*HandleRogueCommonPendingActionScRsp_KBDCMLFNEOL
	//	*HandleRogueCommonPendingActionScRsp_PMOKDHEFMCD
	Action isHandleRogueCommonPendingActionScRsp_Action `protobuf_oneof:"action"`
}

func (x *HandleRogueCommonPendingActionScRsp) Reset() {
	*x = HandleRogueCommonPendingActionScRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRogueCommonPendingActionScRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRogueCommonPendingActionScRsp) ProtoMessage() {}

func (x *HandleRogueCommonPendingActionScRsp) ProtoReflect() protoreflect.Message {
	mi := &file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRogueCommonPendingActionScRsp.ProtoReflect.Descriptor instead.
func (*HandleRogueCommonPendingActionScRsp) Descriptor() ([]byte, []int) {
	return file_HandleRogueCommonPendingActionScRsp_proto_rawDescGZIP(), []int{0}
}

func (x *HandleRogueCommonPendingActionScRsp) GetQueuePosition() uint32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *HandleRogueCommonPendingActionScRsp) GetQueueLocation() uint32 {
	if x != nil {
		return x.QueueLocation
	}
	return 0
}

func (x *HandleRogueCommonPendingActionScRsp) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *HandleRogueCommonPendingActionScRsp) GetDGHOFLBPLOM() *OEABNDMNIDN {
	if x != nil {
		return x.DGHOFLBPLOM
	}
	return nil
}

func (m *HandleRogueCommonPendingActionScRsp) GetAction() isHandleRogueCommonPendingActionScRsp_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBuffSelectCallback() *RogueBuffSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BuffSelectCallback); ok {
		return x.BuffSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBFEOAJMCIMI() *APMPMCHABII {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BFEOAJMCIMI); ok {
		return x.BFEOAJMCIMI
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetPNIHMAAPMIG() *GFHOEAAAOCO {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_PNIHMAAPMIG); ok {
		return x.PNIHMAAPMIG
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBuffRerollCallback() *RogueBuffRerollCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BuffRerollCallback); ok {
		return x.BuffRerollCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBCLAIIEKMEK() *OONPKDFMPDA {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BCLAIIEKMEK); ok {
		return x.BCLAIIEKMEK
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetKOIPMHGJJBI() *HBEBACENHBE {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_KOIPMHGJJBI); ok {
		return x.KOIPMHGJJBI
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetGIKHFCFCKMO() *MEBMBCJECBJ {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_GIKHFCFCKMO); ok {
		return x.GIKHFCFCKMO
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetEPKDBDGBHIC() *JOGKAPNKCOI {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_EPKDBDGBHIC); ok {
		return x.EPKDBDGBHIC
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetCEHNAAOODDG() *MMKMMFJEMDL {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_CEHNAAOODDG); ok {
		return x.CEHNAAOODDG
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetMiracleSelectCallback() *RogueMiracleSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback); ok {
		return x.MiracleSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetDIBJKEBNIPK() *CIHAGDAFBFI {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_DIBJKEBNIPK); ok {
		return x.DIBJKEBNIPK
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBonusSelectCallback() *RogueBonusSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BonusSelectCallback); ok {
		return x.BonusSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetRogueTournFormulaCallback() *RogueTournFormulaCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback); ok {
		return x.RogueTournFormulaCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetONLMPLCMLOG() *ILBOACGHEGD {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_ONLMPLCMLOG); ok {
		return x.ONLMPLCMLOG
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetKBDCMLFNEOL() *KKALMAIDIGF {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_KBDCMLFNEOL); ok {
		return x.KBDCMLFNEOL
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetPMOKDHEFMCD() *EDNIMPBHDHB {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_PMOKDHEFMCD); ok {
		return x.PMOKDHEFMCD
	}
	return nil
}

type isHandleRogueCommonPendingActionScRsp_Action interface {
	isHandleRogueCommonPendingActionScRsp_Action()
}

type HandleRogueCommonPendingActionScRsp_BuffSelectCallback struct {
	BuffSelectCallback *RogueBuffSelectCallback `protobuf:"bytes,1689,opt,name=buff_select_callback,json=buffSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BFEOAJMCIMI struct {
	BFEOAJMCIMI *APMPMCHABII `protobuf:"bytes,1077,opt,name=BFEOAJMCIMI,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_PNIHMAAPMIG struct {
	PNIHMAAPMIG *GFHOEAAAOCO `protobuf:"bytes,157,opt,name=PNIHMAAPMIG,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BuffRerollCallback struct {
	BuffRerollCallback *RogueBuffRerollCallback `protobuf:"bytes,952,opt,name=buff_reroll_callback,json=buffRerollCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BCLAIIEKMEK struct {
	BCLAIIEKMEK *OONPKDFMPDA `protobuf:"bytes,34,opt,name=BCLAIIEKMEK,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_KOIPMHGJJBI struct {
	KOIPMHGJJBI *HBEBACENHBE `protobuf:"bytes,290,opt,name=KOIPMHGJJBI,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_GIKHFCFCKMO struct {
	GIKHFCFCKMO *MEBMBCJECBJ `protobuf:"bytes,848,opt,name=GIKHFCFCKMO,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_EPKDBDGBHIC struct {
	EPKDBDGBHIC *JOGKAPNKCOI `protobuf:"bytes,1241,opt,name=EPKDBDGBHIC,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_CEHNAAOODDG struct {
	CEHNAAOODDG *MMKMMFJEMDL `protobuf:"bytes,253,opt,name=CEHNAAOODDG,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_MiracleSelectCallback struct {
	MiracleSelectCallback *RogueMiracleSelectCallback `protobuf:"bytes,295,opt,name=miracle_select_callback,json=miracleSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_DIBJKEBNIPK struct {
	DIBJKEBNIPK *CIHAGDAFBFI `protobuf:"bytes,738,opt,name=DIBJKEBNIPK,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BonusSelectCallback struct {
	BonusSelectCallback *RogueBonusSelectCallback `protobuf:"bytes,176,opt,name=bonus_select_callback,json=bonusSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback struct {
	RogueTournFormulaCallback *RogueTournFormulaCallback `protobuf:"bytes,801,opt,name=rogue_tourn_formula_callback,json=rogueTournFormulaCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_ONLMPLCMLOG struct {
	ONLMPLCMLOG *ILBOACGHEGD `protobuf:"bytes,493,opt,name=ONLMPLCMLOG,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_KBDCMLFNEOL struct {
	KBDCMLFNEOL *KKALMAIDIGF `protobuf:"bytes,1083,opt,name=KBDCMLFNEOL,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_PMOKDHEFMCD struct {
	PMOKDHEFMCD *EDNIMPBHDHB `protobuf:"bytes,246,opt,name=PMOKDHEFMCD,proto3,oneof"`
}

func (*HandleRogueCommonPendingActionScRsp_BuffSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BFEOAJMCIMI) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_PNIHMAAPMIG) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BuffRerollCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BCLAIIEKMEK) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_KOIPMHGJJBI) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_GIKHFCFCKMO) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_EPKDBDGBHIC) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_CEHNAAOODDG) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_DIBJKEBNIPK) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BonusSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_ONLMPLCMLOG) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_KBDCMLFNEOL) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_PMOKDHEFMCD) isHandleRogueCommonPendingActionScRsp_Action() {
}

var File_HandleRogueCommonPendingActionScRsp_proto protoreflect.FileDescriptor

var file_HandleRogueCommonPendingActionScRsp_proto_rawDesc = []byte{
	0x0a, 0x29, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x42, 0x45, 0x42,
	0x41, 0x43, 0x45, 0x4e, 0x48, 0x42, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d,
	0x4d, 0x4b, 0x4d, 0x4d, 0x46, 0x4a, 0x45, 0x4d, 0x44, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c,
	0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x45, 0x44, 0x4e, 0x49, 0x4d, 0x50, 0x42, 0x48, 0x44, 0x48, 0x42, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x45, 0x42, 0x4d, 0x42, 0x43, 0x4a, 0x45, 0x43, 0x42, 0x4a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x4b, 0x41, 0x4c, 0x4d, 0x41, 0x49, 0x44, 0x49,
	0x47, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a, 0x4f, 0x47, 0x4b, 0x41,
	0x50, 0x4e, 0x4b, 0x43, 0x4f, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x47, 0x46,
	0x48, 0x4f, 0x45, 0x41, 0x41, 0x41, 0x4f, 0x43, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x4f, 0x4f, 0x4e, 0x50, 0x4b, 0x44, 0x46, 0x4d, 0x50, 0x44, 0x41, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49, 0x4c, 0x42, 0x4f, 0x41, 0x43, 0x47, 0x48, 0x45, 0x47,
	0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x43, 0x49, 0x48, 0x41, 0x47, 0x44, 0x41,
	0x46, 0x42, 0x46, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x41, 0x50, 0x4d, 0x50,
	0x4d, 0x43, 0x48, 0x41, 0x42, 0x49, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f,
	0x45, 0x41, 0x42, 0x4e, 0x44, 0x4d, 0x4e, 0x49, 0x44, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa0, 0x09, 0x0a, 0x23, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x52, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x2f, 0x0a, 0x0b, 0x44, 0x47, 0x48, 0x4f, 0x46, 0x4c, 0x42, 0x50, 0x4c, 0x4f, 0x4d, 0x18,
	0xb1, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x45, 0x41, 0x42, 0x4e, 0x44, 0x4d,
	0x4e, 0x49, 0x44, 0x4e, 0x52, 0x0b, 0x44, 0x47, 0x48, 0x4f, 0x46, 0x4c, 0x42, 0x50, 0x4c, 0x4f,
	0x4d, 0x12, 0x4d, 0x0a, 0x14, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x99, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x12, 0x62, 0x75,
	0x66, 0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x31, 0x0a, 0x0b, 0x42, 0x46, 0x45, 0x4f, 0x41, 0x4a, 0x4d, 0x43, 0x49, 0x4d, 0x49, 0x18,
	0xb5, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x50, 0x4d, 0x50, 0x4d, 0x43, 0x48,
	0x41, 0x42, 0x49, 0x49, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x46, 0x45, 0x4f, 0x41, 0x4a, 0x4d, 0x43,
	0x49, 0x4d, 0x49, 0x12, 0x31, 0x0a, 0x0b, 0x50, 0x4e, 0x49, 0x48, 0x4d, 0x41, 0x41, 0x50, 0x4d,
	0x49, 0x47, 0x18, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x46, 0x48, 0x4f,
	0x45, 0x41, 0x41, 0x41, 0x4f, 0x43, 0x4f, 0x48, 0x00, 0x52, 0x0b, 0x50, 0x4e, 0x49, 0x48, 0x4d,
	0x41, 0x41, 0x50, 0x4d, 0x49, 0x47, 0x12, 0x4d, 0x0a, 0x14, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x72,
	0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xb8,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x12, 0x62, 0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x0b, 0x42, 0x43, 0x4c, 0x41, 0x49, 0x49, 0x45,
	0x4b, 0x4d, 0x45, 0x4b, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x4f, 0x4e,
	0x50, 0x4b, 0x44, 0x46, 0x4d, 0x50, 0x44, 0x41, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x43, 0x4c, 0x41,
	0x49, 0x49, 0x45, 0x4b, 0x4d, 0x45, 0x4b, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x4f, 0x49, 0x50, 0x4d,
	0x48, 0x47, 0x4a, 0x4a, 0x42, 0x49, 0x18, 0xa2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x48, 0x42, 0x45, 0x42, 0x41, 0x43, 0x45, 0x4e, 0x48, 0x42, 0x45, 0x48, 0x00, 0x52, 0x0b, 0x4b,
	0x4f, 0x49, 0x50, 0x4d, 0x48, 0x47, 0x4a, 0x4a, 0x42, 0x49, 0x12, 0x31, 0x0a, 0x0b, 0x47, 0x49,
	0x4b, 0x48, 0x46, 0x43, 0x46, 0x43, 0x4b, 0x4d, 0x4f, 0x18, 0xd0, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4d, 0x45, 0x42, 0x4d, 0x42, 0x43, 0x4a, 0x45, 0x43, 0x42, 0x4a, 0x48, 0x00,
	0x52, 0x0b, 0x47, 0x49, 0x4b, 0x48, 0x46, 0x43, 0x46, 0x43, 0x4b, 0x4d, 0x4f, 0x12, 0x31, 0x0a,
	0x0b, 0x45, 0x50, 0x4b, 0x44, 0x42, 0x44, 0x47, 0x42, 0x48, 0x49, 0x43, 0x18, 0xd9, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x4f, 0x47, 0x4b, 0x41, 0x50, 0x4e, 0x4b, 0x43, 0x4f,
	0x49, 0x48, 0x00, 0x52, 0x0b, 0x45, 0x50, 0x4b, 0x44, 0x42, 0x44, 0x47, 0x42, 0x48, 0x49, 0x43,
	0x12, 0x31, 0x0a, 0x0b, 0x43, 0x45, 0x48, 0x4e, 0x41, 0x41, 0x4f, 0x4f, 0x44, 0x44, 0x47, 0x18,
	0xfd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x4d, 0x4b, 0x4d, 0x4d, 0x46, 0x4a,
	0x45, 0x4d, 0x44, 0x4c, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x45, 0x48, 0x4e, 0x41, 0x41, 0x4f, 0x4f,
	0x44, 0x44, 0x47, 0x12, 0x56, 0x0a, 0x17, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xa7,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x0b, 0x44,
	0x49, 0x42, 0x4a, 0x4b, 0x45, 0x42, 0x4e, 0x49, 0x50, 0x4b, 0x18, 0xe2, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x49, 0x48, 0x41, 0x47, 0x44, 0x41, 0x46, 0x42, 0x46, 0x49, 0x48,
	0x00, 0x52, 0x0b, 0x44, 0x49, 0x42, 0x4a, 0x4b, 0x45, 0x42, 0x4e, 0x49, 0x50, 0x4b, 0x12, 0x50,
	0x0a, 0x15, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xb0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x5e, 0x0a, 0x1c, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0xa1, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x19, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x31, 0x0a, 0x0b, 0x4f, 0x4e, 0x4c, 0x4d, 0x50, 0x4c, 0x43, 0x4d, 0x4c, 0x4f, 0x47, 0x18,
	0xed, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x4c, 0x42, 0x4f, 0x41, 0x43, 0x47,
	0x48, 0x45, 0x47, 0x44, 0x48, 0x00, 0x52, 0x0b, 0x4f, 0x4e, 0x4c, 0x4d, 0x50, 0x4c, 0x43, 0x4d,
	0x4c, 0x4f, 0x47, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x42, 0x44, 0x43, 0x4d, 0x4c, 0x46, 0x4e, 0x45,
	0x4f, 0x4c, 0x18, 0xbb, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x4b, 0x41, 0x4c,
	0x4d, 0x41, 0x49, 0x44, 0x49, 0x47, 0x46, 0x48, 0x00, 0x52, 0x0b, 0x4b, 0x42, 0x44, 0x43, 0x4d,
	0x4c, 0x46, 0x4e, 0x45, 0x4f, 0x4c, 0x12, 0x31, 0x0a, 0x0b, 0x50, 0x4d, 0x4f, 0x4b, 0x44, 0x48,
	0x45, 0x46, 0x4d, 0x43, 0x44, 0x18, 0xf6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45,
	0x44, 0x4e, 0x49, 0x4d, 0x50, 0x42, 0x48, 0x44, 0x48, 0x42, 0x48, 0x00, 0x52, 0x0b, 0x50, 0x4d,
	0x4f, 0x4b, 0x44, 0x48, 0x45, 0x46, 0x4d, 0x43, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_HandleRogueCommonPendingActionScRsp_proto_rawDescOnce sync.Once
	file_HandleRogueCommonPendingActionScRsp_proto_rawDescData = file_HandleRogueCommonPendingActionScRsp_proto_rawDesc
)

func file_HandleRogueCommonPendingActionScRsp_proto_rawDescGZIP() []byte {
	file_HandleRogueCommonPendingActionScRsp_proto_rawDescOnce.Do(func() {
		file_HandleRogueCommonPendingActionScRsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_HandleRogueCommonPendingActionScRsp_proto_rawDescData)
	})
	return file_HandleRogueCommonPendingActionScRsp_proto_rawDescData
}

var file_HandleRogueCommonPendingActionScRsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_HandleRogueCommonPendingActionScRsp_proto_goTypes = []interface{}{
	(*HandleRogueCommonPendingActionScRsp)(nil), // 0: HandleRogueCommonPendingActionScRsp
	(*OEABNDMNIDN)(nil),                         // 1: OEABNDMNIDN
	(*RogueBuffSelectCallback)(nil),             // 2: RogueBuffSelectCallback
	(*APMPMCHABII)(nil),                         // 3: APMPMCHABII
	(*GFHOEAAAOCO)(nil),                         // 4: GFHOEAAAOCO
	(*RogueBuffRerollCallback)(nil),             // 5: RogueBuffRerollCallback
	(*OONPKDFMPDA)(nil),                         // 6: OONPKDFMPDA
	(*HBEBACENHBE)(nil),                         // 7: HBEBACENHBE
	(*MEBMBCJECBJ)(nil),                         // 8: MEBMBCJECBJ
	(*JOGKAPNKCOI)(nil),                         // 9: JOGKAPNKCOI
	(*MMKMMFJEMDL)(nil),                         // 10: MMKMMFJEMDL
	(*RogueMiracleSelectCallback)(nil),          // 11: RogueMiracleSelectCallback
	(*CIHAGDAFBFI)(nil),                         // 12: CIHAGDAFBFI
	(*RogueBonusSelectCallback)(nil),            // 13: RogueBonusSelectCallback
	(*RogueTournFormulaCallback)(nil),           // 14: RogueTournFormulaCallback
	(*ILBOACGHEGD)(nil),                         // 15: ILBOACGHEGD
	(*KKALMAIDIGF)(nil),                         // 16: KKALMAIDIGF
	(*EDNIMPBHDHB)(nil),                         // 17: EDNIMPBHDHB
}
var file_HandleRogueCommonPendingActionScRsp_proto_depIdxs = []int32{
	1,  // 0: HandleRogueCommonPendingActionScRsp.DGHOFLBPLOM:type_name -> OEABNDMNIDN
	2,  // 1: HandleRogueCommonPendingActionScRsp.buff_select_callback:type_name -> RogueBuffSelectCallback
	3,  // 2: HandleRogueCommonPendingActionScRsp.BFEOAJMCIMI:type_name -> APMPMCHABII
	4,  // 3: HandleRogueCommonPendingActionScRsp.PNIHMAAPMIG:type_name -> GFHOEAAAOCO
	5,  // 4: HandleRogueCommonPendingActionScRsp.buff_reroll_callback:type_name -> RogueBuffRerollCallback
	6,  // 5: HandleRogueCommonPendingActionScRsp.BCLAIIEKMEK:type_name -> OONPKDFMPDA
	7,  // 6: HandleRogueCommonPendingActionScRsp.KOIPMHGJJBI:type_name -> HBEBACENHBE
	8,  // 7: HandleRogueCommonPendingActionScRsp.GIKHFCFCKMO:type_name -> MEBMBCJECBJ
	9,  // 8: HandleRogueCommonPendingActionScRsp.EPKDBDGBHIC:type_name -> JOGKAPNKCOI
	10, // 9: HandleRogueCommonPendingActionScRsp.CEHNAAOODDG:type_name -> MMKMMFJEMDL
	11, // 10: HandleRogueCommonPendingActionScRsp.miracle_select_callback:type_name -> RogueMiracleSelectCallback
	12, // 11: HandleRogueCommonPendingActionScRsp.DIBJKEBNIPK:type_name -> CIHAGDAFBFI
	13, // 12: HandleRogueCommonPendingActionScRsp.bonus_select_callback:type_name -> RogueBonusSelectCallback
	14, // 13: HandleRogueCommonPendingActionScRsp.rogue_tourn_formula_callback:type_name -> RogueTournFormulaCallback
	15, // 14: HandleRogueCommonPendingActionScRsp.ONLMPLCMLOG:type_name -> ILBOACGHEGD
	16, // 15: HandleRogueCommonPendingActionScRsp.KBDCMLFNEOL:type_name -> KKALMAIDIGF
	17, // 16: HandleRogueCommonPendingActionScRsp.PMOKDHEFMCD:type_name -> EDNIMPBHDHB
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_HandleRogueCommonPendingActionScRsp_proto_init() }
func file_HandleRogueCommonPendingActionScRsp_proto_init() {
	if File_HandleRogueCommonPendingActionScRsp_proto != nil {
		return
	}
	file_RogueBuffSelectCallback_proto_init()
	file_HBEBACENHBE_proto_init()
	file_MMKMMFJEMDL_proto_init()
	file_RogueBuffRerollCallback_proto_init()
	file_EDNIMPBHDHB_proto_init()
	file_RogueBonusSelectCallback_proto_init()
	file_MEBMBCJECBJ_proto_init()
	file_KKALMAIDIGF_proto_init()
	file_RogueTournFormulaCallback_proto_init()
	file_JOGKAPNKCOI_proto_init()
	file_GFHOEAAAOCO_proto_init()
	file_OONPKDFMPDA_proto_init()
	file_RogueMiracleSelectCallback_proto_init()
	file_ILBOACGHEGD_proto_init()
	file_CIHAGDAFBFI_proto_init()
	file_APMPMCHABII_proto_init()
	file_OEABNDMNIDN_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRogueCommonPendingActionScRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*HandleRogueCommonPendingActionScRsp_BuffSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_BFEOAJMCIMI)(nil),
		(*HandleRogueCommonPendingActionScRsp_PNIHMAAPMIG)(nil),
		(*HandleRogueCommonPendingActionScRsp_BuffRerollCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_BCLAIIEKMEK)(nil),
		(*HandleRogueCommonPendingActionScRsp_KOIPMHGJJBI)(nil),
		(*HandleRogueCommonPendingActionScRsp_GIKHFCFCKMO)(nil),
		(*HandleRogueCommonPendingActionScRsp_EPKDBDGBHIC)(nil),
		(*HandleRogueCommonPendingActionScRsp_CEHNAAOODDG)(nil),
		(*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_DIBJKEBNIPK)(nil),
		(*HandleRogueCommonPendingActionScRsp_BonusSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_ONLMPLCMLOG)(nil),
		(*HandleRogueCommonPendingActionScRsp_KBDCMLFNEOL)(nil),
		(*HandleRogueCommonPendingActionScRsp_PMOKDHEFMCD)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HandleRogueCommonPendingActionScRsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HandleRogueCommonPendingActionScRsp_proto_goTypes,
		DependencyIndexes: file_HandleRogueCommonPendingActionScRsp_proto_depIdxs,
		MessageInfos:      file_HandleRogueCommonPendingActionScRsp_proto_msgTypes,
	}.Build()
	File_HandleRogueCommonPendingActionScRsp_proto = out.File
	file_HandleRogueCommonPendingActionScRsp_proto_rawDesc = nil
	file_HandleRogueCommonPendingActionScRsp_proto_goTypes = nil
	file_HandleRogueCommonPendingActionScRsp_proto_depIdxs = nil
}
