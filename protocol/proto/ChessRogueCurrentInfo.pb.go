// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: ChessRogueCurrentInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChessRogueCurrentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameMiracleInfo      *ChessRogueMiracleInfo           `protobuf:"bytes,6,opt,name=game_miracle_info,json=gameMiracleInfo,proto3" json:"game_miracle_info,omitempty"`
	PendingAction        *RogueCommonPendingAction        `protobuf:"bytes,10,opt,name=pending_action,json=pendingAction,proto3" json:"pending_action,omitempty"`
	NousValueInfo        *ChessRogueNousValueInfo         `protobuf:"bytes,4,opt,name=nous_value_info,json=nousValueInfo,proto3" json:"nous_value_info,omitempty"`
	RogueSubMode         uint32                           `protobuf:"varint,11,opt,name=rogue_sub_mode,json=rogueSubMode,proto3" json:"rogue_sub_mode,omitempty"`
	LevelInfo            *ChessRogueLevelInfo             `protobuf:"bytes,15,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	RogueDifficultyInfo  *ChessRogueCurrentDifficultyInfo `protobuf:"bytes,1749,opt,name=rogue_difficulty_info,json=rogueDifficultyInfo,proto3" json:"rogue_difficulty_info,omitempty"`
	NKGKDMFHGFJ          *JPFECHLHHEN                     `protobuf:"bytes,3,opt,name=NKGKDMFHGFJ,proto3" json:"NKGKDMFHGFJ,omitempty"`
	RogueAeonInfo        *ChessRogueAeonInfo              `protobuf:"bytes,12,opt,name=rogue_aeon_info,json=rogueAeonInfo,proto3" json:"rogue_aeon_info,omitempty"`
	RogueVirtualItemInfo *NCLDKJHEPGM                     `protobuf:"bytes,14,opt,name=rogue_virtual_item_info,json=rogueVirtualItemInfo,proto3" json:"rogue_virtual_item_info,omitempty"`
	VirtualItemInfo      *RogueVirtualItem                `protobuf:"bytes,5,opt,name=virtual_item_info,json=virtualItemInfo,proto3" json:"virtual_item_info,omitempty"`
	RogueLineupInfo      *ChessRogueLineupInfo            `protobuf:"bytes,8,opt,name=rogue_lineup_info,json=rogueLineupInfo,proto3" json:"rogue_lineup_info,omitempty"`
	RogueBuffInfo        *ChessRogueBuffInfo              `protobuf:"bytes,1,opt,name=rogue_buff_info,json=rogueBuffInfo,proto3" json:"rogue_buff_info,omitempty"`
	RogueDiceInfo        *ChessRogueDiceInfo              `protobuf:"bytes,9,opt,name=rogue_dice_info,json=rogueDiceInfo,proto3" json:"rogue_dice_info,omitempty"`
	RogueCurrentGameInfo []*RogueGameInfo                 `protobuf:"bytes,13,rep,name=rogue_current_game_info,json=rogueCurrentGameInfo,proto3" json:"rogue_current_game_info,omitempty"`
	StoryBuffInfo        *MOICCEIFBBA                     `protobuf:"bytes,7,opt,name=story_buff_info,json=storyBuffInfo,proto3" json:"story_buff_info,omitempty"`
}

func (x *ChessRogueCurrentInfo) Reset() {
	*x = ChessRogueCurrentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ChessRogueCurrentInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChessRogueCurrentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChessRogueCurrentInfo) ProtoMessage() {}

func (x *ChessRogueCurrentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ChessRogueCurrentInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChessRogueCurrentInfo.ProtoReflect.Descriptor instead.
func (*ChessRogueCurrentInfo) Descriptor() ([]byte, []int) {
	return file_ChessRogueCurrentInfo_proto_rawDescGZIP(), []int{0}
}

func (x *ChessRogueCurrentInfo) GetGameMiracleInfo() *ChessRogueMiracleInfo {
	if x != nil {
		return x.GameMiracleInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetPendingAction() *RogueCommonPendingAction {
	if x != nil {
		return x.PendingAction
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetNousValueInfo() *ChessRogueNousValueInfo {
	if x != nil {
		return x.NousValueInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueSubMode() uint32 {
	if x != nil {
		return x.RogueSubMode
	}
	return 0
}

func (x *ChessRogueCurrentInfo) GetLevelInfo() *ChessRogueLevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueDifficultyInfo() *ChessRogueCurrentDifficultyInfo {
	if x != nil {
		return x.RogueDifficultyInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetNKGKDMFHGFJ() *JPFECHLHHEN {
	if x != nil {
		return x.NKGKDMFHGFJ
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueAeonInfo() *ChessRogueAeonInfo {
	if x != nil {
		return x.RogueAeonInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueVirtualItemInfo() *NCLDKJHEPGM {
	if x != nil {
		return x.RogueVirtualItemInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetVirtualItemInfo() *RogueVirtualItem {
	if x != nil {
		return x.VirtualItemInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueLineupInfo() *ChessRogueLineupInfo {
	if x != nil {
		return x.RogueLineupInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueBuffInfo() *ChessRogueBuffInfo {
	if x != nil {
		return x.RogueBuffInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueDiceInfo() *ChessRogueDiceInfo {
	if x != nil {
		return x.RogueDiceInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetRogueCurrentGameInfo() []*RogueGameInfo {
	if x != nil {
		return x.RogueCurrentGameInfo
	}
	return nil
}

func (x *ChessRogueCurrentInfo) GetStoryBuffInfo() *MOICCEIFBBA {
	if x != nil {
		return x.StoryBuffInfo
	}
	return nil
}

var File_ChessRogueCurrentInfo_proto protoreflect.FileDescriptor

var file_ChessRogueCurrentInfo_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a,
	0x50, 0x46, 0x45, 0x43, 0x48, 0x4c, 0x48, 0x48, 0x45, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x4d, 0x4f, 0x49, 0x43, 0x43, 0x45, 0x49, 0x46, 0x42, 0x42, 0x41, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x43, 0x68, 0x65, 0x73,
	0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x43, 0x68,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x44, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x4e, 0x6f, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4e, 0x43, 0x4c, 0x44, 0x4b, 0x4a, 0x48, 0x45, 0x50,
	0x47, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x07, 0x0a, 0x15,
	0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x69,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x69,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0f, 0x6e,
	0x6f, 0x75, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x4e, 0x6f, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x6e, 0x6f, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x0e, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x75, 0x62, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x15, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xd5, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2e, 0x0a, 0x0b, 0x4e, 0x4b, 0x47, 0x4b, 0x44, 0x4d, 0x46, 0x48, 0x47, 0x46, 0x4a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x50, 0x46, 0x45, 0x43, 0x48, 0x4c, 0x48, 0x48,
	0x45, 0x4e, 0x52, 0x0b, 0x4e, 0x4b, 0x47, 0x4b, 0x44, 0x4d, 0x46, 0x48, 0x47, 0x46, 0x4a, 0x12,
	0x3b, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x61, 0x65, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x72,
	0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x17,
	0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4e, 0x43, 0x4c, 0x44, 0x4b, 0x4a, 0x48, 0x45, 0x50, 0x47, 0x4d, 0x52, 0x14, 0x72, 0x6f, 0x67,
	0x75, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3d, 0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x41, 0x0a, 0x11, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x66,
	0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3b, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x73,
	0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x44, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x72, 0x6f, 0x67, 0x75, 0x65, 0x44, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a,
	0x17, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14,
	0x72, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x62, 0x75,
	0x66, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4d, 0x4f, 0x49, 0x43, 0x43, 0x45, 0x49, 0x46, 0x42, 0x42, 0x41, 0x52, 0x0d, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45,
	0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ChessRogueCurrentInfo_proto_rawDescOnce sync.Once
	file_ChessRogueCurrentInfo_proto_rawDescData = file_ChessRogueCurrentInfo_proto_rawDesc
)

func file_ChessRogueCurrentInfo_proto_rawDescGZIP() []byte {
	file_ChessRogueCurrentInfo_proto_rawDescOnce.Do(func() {
		file_ChessRogueCurrentInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_ChessRogueCurrentInfo_proto_rawDescData)
	})
	return file_ChessRogueCurrentInfo_proto_rawDescData
}

var file_ChessRogueCurrentInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ChessRogueCurrentInfo_proto_goTypes = []interface{}{
	(*ChessRogueCurrentInfo)(nil),           // 0: ChessRogueCurrentInfo
	(*ChessRogueMiracleInfo)(nil),           // 1: ChessRogueMiracleInfo
	(*RogueCommonPendingAction)(nil),        // 2: RogueCommonPendingAction
	(*ChessRogueNousValueInfo)(nil),         // 3: ChessRogueNousValueInfo
	(*ChessRogueLevelInfo)(nil),             // 4: ChessRogueLevelInfo
	(*ChessRogueCurrentDifficultyInfo)(nil), // 5: ChessRogueCurrentDifficultyInfo
	(*JPFECHLHHEN)(nil),                     // 6: JPFECHLHHEN
	(*ChessRogueAeonInfo)(nil),              // 7: ChessRogueAeonInfo
	(*NCLDKJHEPGM)(nil),                     // 8: NCLDKJHEPGM
	(*RogueVirtualItem)(nil),                // 9: RogueVirtualItem
	(*ChessRogueLineupInfo)(nil),            // 10: ChessRogueLineupInfo
	(*ChessRogueBuffInfo)(nil),              // 11: ChessRogueBuffInfo
	(*ChessRogueDiceInfo)(nil),              // 12: ChessRogueDiceInfo
	(*RogueGameInfo)(nil),                   // 13: RogueGameInfo
	(*MOICCEIFBBA)(nil),                     // 14: MOICCEIFBBA
}
var file_ChessRogueCurrentInfo_proto_depIdxs = []int32{
	1,  // 0: ChessRogueCurrentInfo.game_miracle_info:type_name -> ChessRogueMiracleInfo
	2,  // 1: ChessRogueCurrentInfo.pending_action:type_name -> RogueCommonPendingAction
	3,  // 2: ChessRogueCurrentInfo.nous_value_info:type_name -> ChessRogueNousValueInfo
	4,  // 3: ChessRogueCurrentInfo.level_info:type_name -> ChessRogueLevelInfo
	5,  // 4: ChessRogueCurrentInfo.rogue_difficulty_info:type_name -> ChessRogueCurrentDifficultyInfo
	6,  // 5: ChessRogueCurrentInfo.NKGKDMFHGFJ:type_name -> JPFECHLHHEN
	7,  // 6: ChessRogueCurrentInfo.rogue_aeon_info:type_name -> ChessRogueAeonInfo
	8,  // 7: ChessRogueCurrentInfo.rogue_virtual_item_info:type_name -> NCLDKJHEPGM
	9,  // 8: ChessRogueCurrentInfo.virtual_item_info:type_name -> RogueVirtualItem
	10, // 9: ChessRogueCurrentInfo.rogue_lineup_info:type_name -> ChessRogueLineupInfo
	11, // 10: ChessRogueCurrentInfo.rogue_buff_info:type_name -> ChessRogueBuffInfo
	12, // 11: ChessRogueCurrentInfo.rogue_dice_info:type_name -> ChessRogueDiceInfo
	13, // 12: ChessRogueCurrentInfo.rogue_current_game_info:type_name -> RogueGameInfo
	14, // 13: ChessRogueCurrentInfo.story_buff_info:type_name -> MOICCEIFBBA
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_ChessRogueCurrentInfo_proto_init() }
func file_ChessRogueCurrentInfo_proto_init() {
	if File_ChessRogueCurrentInfo_proto != nil {
		return
	}
	file_JPFECHLHHEN_proto_init()
	file_MOICCEIFBBA_proto_init()
	file_RogueGameInfo_proto_init()
	file_ChessRogueAeonInfo_proto_init()
	file_ChessRogueMiracleInfo_proto_init()
	file_ChessRogueLevelInfo_proto_init()
	file_ChessRogueBuffInfo_proto_init()
	file_RogueCommonPendingAction_proto_init()
	file_RogueVirtualItem_proto_init()
	file_ChessRogueDiceInfo_proto_init()
	file_ChessRogueNousValueInfo_proto_init()
	file_NCLDKJHEPGM_proto_init()
	file_ChessRogueLineupInfo_proto_init()
	file_ChessRogueCurrentDifficultyInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ChessRogueCurrentInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChessRogueCurrentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ChessRogueCurrentInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ChessRogueCurrentInfo_proto_goTypes,
		DependencyIndexes: file_ChessRogueCurrentInfo_proto_depIdxs,
		MessageInfos:      file_ChessRogueCurrentInfo_proto_msgTypes,
	}.Build()
	File_ChessRogueCurrentInfo_proto = out.File
	file_ChessRogueCurrentInfo_proto_rawDesc = nil
	file_ChessRogueCurrentInfo_proto_goTypes = nil
	file_ChessRogueCurrentInfo_proto_depIdxs = nil
}
