// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: TreasureDungeonLevel.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreasureDungeonLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LLHHGFDEJKM []*PJDNLIBBBAC               `protobuf:"bytes,712,rep,name=LLHHGFDEJKM,proto3" json:"LLHHGFDEJKM,omitempty"`
	JMBBHKAABHL uint32                       `protobuf:"varint,13,opt,name=JMBBHKAABHL,proto3" json:"JMBBHKAABHL,omitempty"`
	CNFKDGGBNPO uint32                       `protobuf:"varint,15,opt,name=CNFKDGGBNPO,proto3" json:"CNFKDGGBNPO,omitempty"`
	BPAGNPADCDE uint32                       `protobuf:"varint,2,opt,name=BPAGNPADCDE,proto3" json:"BPAGNPADCDE,omitempty"`
	LJFFKJNMPAD uint32                       `protobuf:"varint,3,opt,name=LJFFKJNMPAD,proto3" json:"LJFFKJNMPAD,omitempty"`
	ItemList    []*EGNDEIOHPDD               `protobuf:"bytes,710,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	OGGFCAHHMID bool                         `protobuf:"varint,785,opt,name=OGGFCAHHMID,proto3" json:"OGGFCAHHMID,omitempty"`
	IPLEKIJDMLH uint32                       `protobuf:"varint,7,opt,name=IPLEKIJDMLH,proto3" json:"IPLEKIJDMLH,omitempty"`
	BuffList    []*LKHJDANPAPA               `protobuf:"bytes,1357,rep,name=buff_list,json=buffList,proto3" json:"buff_list,omitempty"`
	OCEFJNEGPDH uint32                       `protobuf:"varint,1830,opt,name=OCEFJNEGPDH,proto3" json:"OCEFJNEGPDH,omitempty"`
	FHNOICGJMDF []*FHFGEPCMFCA               `protobuf:"bytes,18,rep,name=FHNOICGJMDF,proto3" json:"FHNOICGJMDF,omitempty"`
	LLLLIIEDHIN bool                         `protobuf:"varint,1849,opt,name=LLLLIIEDHIN,proto3" json:"LLLLIIEDHIN,omitempty"`
	MapId       uint32                       `protobuf:"varint,9,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	BILJKFMFNDN []*TreasureDungeonRecordData `protobuf:"bytes,11,rep,name=BILJKFMFNDN,proto3" json:"BILJKFMFNDN,omitempty"`
	AOKPAOJINNC uint32                       `protobuf:"varint,4,opt,name=AOKPAOJINNC,proto3" json:"AOKPAOJINNC,omitempty"`
	DLJIGKOCHGB bool                         `protobuf:"varint,1791,opt,name=DLJIGKOCHGB,proto3" json:"DLJIGKOCHGB,omitempty"`
	AvatarList  []*FHFGEPCMFCA               `protobuf:"bytes,1443,rep,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty"`
	KLGMEHPNAPM []*JGIBAPLGFEE               `protobuf:"bytes,5,rep,name=KLGMEHPNAPM,proto3" json:"KLGMEHPNAPM,omitempty"`
}

func (x *TreasureDungeonLevel) Reset() {
	*x = TreasureDungeonLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TreasureDungeonLevel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureDungeonLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureDungeonLevel) ProtoMessage() {}

func (x *TreasureDungeonLevel) ProtoReflect() protoreflect.Message {
	mi := &file_TreasureDungeonLevel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureDungeonLevel.ProtoReflect.Descriptor instead.
func (*TreasureDungeonLevel) Descriptor() ([]byte, []int) {
	return file_TreasureDungeonLevel_proto_rawDescGZIP(), []int{0}
}

func (x *TreasureDungeonLevel) GetLLHHGFDEJKM() []*PJDNLIBBBAC {
	if x != nil {
		return x.LLHHGFDEJKM
	}
	return nil
}

func (x *TreasureDungeonLevel) GetJMBBHKAABHL() uint32 {
	if x != nil {
		return x.JMBBHKAABHL
	}
	return 0
}

func (x *TreasureDungeonLevel) GetCNFKDGGBNPO() uint32 {
	if x != nil {
		return x.CNFKDGGBNPO
	}
	return 0
}

func (x *TreasureDungeonLevel) GetBPAGNPADCDE() uint32 {
	if x != nil {
		return x.BPAGNPADCDE
	}
	return 0
}

func (x *TreasureDungeonLevel) GetLJFFKJNMPAD() uint32 {
	if x != nil {
		return x.LJFFKJNMPAD
	}
	return 0
}

func (x *TreasureDungeonLevel) GetItemList() []*EGNDEIOHPDD {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetOGGFCAHHMID() bool {
	if x != nil {
		return x.OGGFCAHHMID
	}
	return false
}

func (x *TreasureDungeonLevel) GetIPLEKIJDMLH() uint32 {
	if x != nil {
		return x.IPLEKIJDMLH
	}
	return 0
}

func (x *TreasureDungeonLevel) GetBuffList() []*LKHJDANPAPA {
	if x != nil {
		return x.BuffList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetOCEFJNEGPDH() uint32 {
	if x != nil {
		return x.OCEFJNEGPDH
	}
	return 0
}

func (x *TreasureDungeonLevel) GetFHNOICGJMDF() []*FHFGEPCMFCA {
	if x != nil {
		return x.FHNOICGJMDF
	}
	return nil
}

func (x *TreasureDungeonLevel) GetLLLLIIEDHIN() bool {
	if x != nil {
		return x.LLLLIIEDHIN
	}
	return false
}

func (x *TreasureDungeonLevel) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *TreasureDungeonLevel) GetBILJKFMFNDN() []*TreasureDungeonRecordData {
	if x != nil {
		return x.BILJKFMFNDN
	}
	return nil
}

func (x *TreasureDungeonLevel) GetAOKPAOJINNC() uint32 {
	if x != nil {
		return x.AOKPAOJINNC
	}
	return 0
}

func (x *TreasureDungeonLevel) GetDLJIGKOCHGB() bool {
	if x != nil {
		return x.DLJIGKOCHGB
	}
	return false
}

func (x *TreasureDungeonLevel) GetAvatarList() []*FHFGEPCMFCA {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetKLGMEHPNAPM() []*JGIBAPLGFEE {
	if x != nil {
		return x.KLGMEHPNAPM
	}
	return nil
}

var File_TreasureDungeonLevel_proto protoreflect.FileDescriptor

var file_TreasureDungeonLevel_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4c, 0x4b,
	0x48, 0x4a, 0x44, 0x41, 0x4e, 0x50, 0x41, 0x50, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x50, 0x4a, 0x44, 0x4e, 0x4c, 0x49, 0x42, 0x42, 0x42, 0x41, 0x43, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4a, 0x47, 0x49, 0x42, 0x41, 0x50, 0x4c, 0x47, 0x46, 0x45, 0x45, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x47, 0x4e, 0x44, 0x45, 0x49, 0x4f, 0x48, 0x50,
	0x44, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x46, 0x48, 0x46, 0x47, 0x45,
	0x50, 0x43, 0x4d, 0x46, 0x43, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x05, 0x0a,
	0x14, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x0b, 0x4c, 0x4c, 0x48, 0x48, 0x47, 0x46, 0x44,
	0x45, 0x4a, 0x4b, 0x4d, 0x18, 0xc8, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x4a,
	0x44, 0x4e, 0x4c, 0x49, 0x42, 0x42, 0x42, 0x41, 0x43, 0x52, 0x0b, 0x4c, 0x4c, 0x48, 0x48, 0x47,
	0x46, 0x44, 0x45, 0x4a, 0x4b, 0x4d, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x4d, 0x42, 0x42, 0x48, 0x4b,
	0x41, 0x41, 0x42, 0x48, 0x4c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4a, 0x4d, 0x42,
	0x42, 0x48, 0x4b, 0x41, 0x41, 0x42, 0x48, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x4e, 0x46, 0x4b,
	0x44, 0x47, 0x47, 0x42, 0x4e, 0x50, 0x4f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43,
	0x4e, 0x46, 0x4b, 0x44, 0x47, 0x47, 0x42, 0x4e, 0x50, 0x4f, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x50,
	0x41, 0x47, 0x4e, 0x50, 0x41, 0x44, 0x43, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x42, 0x50, 0x41, 0x47, 0x4e, 0x50, 0x41, 0x44, 0x43, 0x44, 0x45, 0x12, 0x20, 0x0a, 0x0b,
	0x4c, 0x4a, 0x46, 0x46, 0x4b, 0x4a, 0x4e, 0x4d, 0x50, 0x41, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x4c, 0x4a, 0x46, 0x46, 0x4b, 0x4a, 0x4e, 0x4d, 0x50, 0x41, 0x44, 0x12, 0x2a,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xc6, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x47, 0x4e, 0x44, 0x45, 0x49, 0x4f, 0x48, 0x50, 0x44, 0x44,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x4f, 0x47,
	0x47, 0x46, 0x43, 0x41, 0x48, 0x48, 0x4d, 0x49, 0x44, 0x18, 0x91, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x4f, 0x47, 0x47, 0x46, 0x43, 0x41, 0x48, 0x48, 0x4d, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x50, 0x4c, 0x45, 0x4b, 0x49, 0x4a, 0x44, 0x4d, 0x4c, 0x48, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x49, 0x50, 0x4c, 0x45, 0x4b, 0x49, 0x4a, 0x44, 0x4d, 0x4c, 0x48, 0x12,
	0x2a, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xcd, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x4b, 0x48, 0x4a, 0x44, 0x41, 0x4e, 0x50, 0x41, 0x50,
	0x41, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x4f,
	0x43, 0x45, 0x46, 0x4a, 0x4e, 0x45, 0x47, 0x50, 0x44, 0x48, 0x18, 0xa6, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x4f, 0x43, 0x45, 0x46, 0x4a, 0x4e, 0x45, 0x47, 0x50, 0x44, 0x48, 0x12, 0x2e,
	0x0a, 0x0b, 0x46, 0x48, 0x4e, 0x4f, 0x49, 0x43, 0x47, 0x4a, 0x4d, 0x44, 0x46, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x48, 0x46, 0x47, 0x45, 0x50, 0x43, 0x4d, 0x46, 0x43,
	0x41, 0x52, 0x0b, 0x46, 0x48, 0x4e, 0x4f, 0x49, 0x43, 0x47, 0x4a, 0x4d, 0x44, 0x46, 0x12, 0x21,
	0x0a, 0x0b, 0x4c, 0x4c, 0x4c, 0x4c, 0x49, 0x49, 0x45, 0x44, 0x48, 0x49, 0x4e, 0x18, 0xb9, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4c, 0x4c, 0x4c, 0x4c, 0x49, 0x49, 0x45, 0x44, 0x48, 0x49,
	0x4e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x42, 0x49, 0x4c, 0x4a,
	0x4b, 0x46, 0x4d, 0x46, 0x4e, 0x44, 0x4e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x42, 0x49, 0x4c, 0x4a, 0x4b,
	0x46, 0x4d, 0x46, 0x4e, 0x44, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x4f, 0x4b, 0x50, 0x41, 0x4f,
	0x4a, 0x49, 0x4e, 0x4e, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x41, 0x4f, 0x4b,
	0x50, 0x41, 0x4f, 0x4a, 0x49, 0x4e, 0x4e, 0x43, 0x12, 0x21, 0x0a, 0x0b, 0x44, 0x4c, 0x4a, 0x49,
	0x47, 0x4b, 0x4f, 0x43, 0x48, 0x47, 0x42, 0x18, 0xff, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x44, 0x4c, 0x4a, 0x49, 0x47, 0x4b, 0x4f, 0x43, 0x48, 0x47, 0x42, 0x12, 0x2e, 0x0a, 0x0b, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xa3, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x48, 0x46, 0x47, 0x45, 0x50, 0x43, 0x4d, 0x46, 0x43, 0x41, 0x52,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x4b,
	0x4c, 0x47, 0x4d, 0x45, 0x48, 0x50, 0x4e, 0x41, 0x50, 0x4d, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4a, 0x47, 0x49, 0x42, 0x41, 0x50, 0x4c, 0x47, 0x46, 0x45, 0x45, 0x52, 0x0b,
	0x4b, 0x4c, 0x47, 0x4d, 0x45, 0x48, 0x50, 0x4e, 0x41, 0x50, 0x4d, 0x42, 0x28, 0x5a, 0x08, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e,
	0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_TreasureDungeonLevel_proto_rawDescOnce sync.Once
	file_TreasureDungeonLevel_proto_rawDescData = file_TreasureDungeonLevel_proto_rawDesc
)

func file_TreasureDungeonLevel_proto_rawDescGZIP() []byte {
	file_TreasureDungeonLevel_proto_rawDescOnce.Do(func() {
		file_TreasureDungeonLevel_proto_rawDescData = protoimpl.X.CompressGZIP(file_TreasureDungeonLevel_proto_rawDescData)
	})
	return file_TreasureDungeonLevel_proto_rawDescData
}

var file_TreasureDungeonLevel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_TreasureDungeonLevel_proto_goTypes = []interface{}{
	(*TreasureDungeonLevel)(nil),      // 0: TreasureDungeonLevel
	(*PJDNLIBBBAC)(nil),               // 1: PJDNLIBBBAC
	(*EGNDEIOHPDD)(nil),               // 2: EGNDEIOHPDD
	(*LKHJDANPAPA)(nil),               // 3: LKHJDANPAPA
	(*FHFGEPCMFCA)(nil),               // 4: FHFGEPCMFCA
	(*TreasureDungeonRecordData)(nil), // 5: TreasureDungeonRecordData
	(*JGIBAPLGFEE)(nil),               // 6: JGIBAPLGFEE
}
var file_TreasureDungeonLevel_proto_depIdxs = []int32{
	1, // 0: TreasureDungeonLevel.LLHHGFDEJKM:type_name -> PJDNLIBBBAC
	2, // 1: TreasureDungeonLevel.item_list:type_name -> EGNDEIOHPDD
	3, // 2: TreasureDungeonLevel.buff_list:type_name -> LKHJDANPAPA
	4, // 3: TreasureDungeonLevel.FHNOICGJMDF:type_name -> FHFGEPCMFCA
	5, // 4: TreasureDungeonLevel.BILJKFMFNDN:type_name -> TreasureDungeonRecordData
	4, // 5: TreasureDungeonLevel.avatar_list:type_name -> FHFGEPCMFCA
	6, // 6: TreasureDungeonLevel.KLGMEHPNAPM:type_name -> JGIBAPLGFEE
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_TreasureDungeonLevel_proto_init() }
func file_TreasureDungeonLevel_proto_init() {
	if File_TreasureDungeonLevel_proto != nil {
		return
	}
	file_LKHJDANPAPA_proto_init()
	file_PJDNLIBBBAC_proto_init()
	file_JGIBAPLGFEE_proto_init()
	file_EGNDEIOHPDD_proto_init()
	file_TreasureDungeonRecordData_proto_init()
	file_FHFGEPCMFCA_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_TreasureDungeonLevel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasureDungeonLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TreasureDungeonLevel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TreasureDungeonLevel_proto_goTypes,
		DependencyIndexes: file_TreasureDungeonLevel_proto_depIdxs,
		MessageInfos:      file_TreasureDungeonLevel_proto_msgTypes,
	}.Build()
	File_TreasureDungeonLevel_proto = out.File
	file_TreasureDungeonLevel_proto_rawDesc = nil
	file_TreasureDungeonLevel_proto_goTypes = nil
	file_TreasureDungeonLevel_proto_depIdxs = nil
}
